#usda 1.0
(
    defaultPrim = "hello"
)

def Xform "hello" (
    variants = {
        string lockedVariant = "locked"
    }
    prepend variantSets = "lockedVariant"
)
{
    variantSet "lockedVariant" = {
        "locked" {
          def Xform "world" (
            al_usdmaya_lock = "transform"
          )
          {
            def Mesh "cam"
            {
              int[] faceVertexCounts.timeSamples = {
                  1: [4, 4, 4, 4, 4, 4]
              }
              int[] faceVertexIndices.timeSamples = {
                  1: [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
              }
              point3f[] points.timeSamples = {
                  1: [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
              }
            }
          }
        }

        "unlocked" {
          def Xform "world"
          {
            def Mesh "cam"
            {
              int[] faceVertexCounts.timeSamples = {
                  1: [4, 4, 4, 4, 4, 4]
              }
              int[] faceVertexIndices.timeSamples = {
                  1: [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
              }
              point3f[] points.timeSamples = {
                  1: [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
              }
            }
          }
        }

        "unlocked_cam" {
          def Xform "world" (
            al_usdmaya_lock = "transform"
          )
          {
            def Mesh "cam" (
              al_usdmaya_lock = "unlocked"
            )
            {
              int[] faceVertexCounts.timeSamples = {
                  1: [4, 4, 4, 4, 4, 4]
              }
              int[] faceVertexIndices.timeSamples = {
                  1: [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
              }
              point3f[] points.timeSamples = {
                  1: [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
              }
            }
          }
        }

        "inherit" {
          def Xform "world" (
            al_usdmaya_lock = "transform"
          )
          {
            def Mesh "cam" (
              al_usdmaya_lock = "inherited"
            )
            {
              int[] faceVertexCounts.timeSamples = {
                  1: [4, 4, 4, 4, 4, 4]
              }
              int[] faceVertexIndices.timeSamples = {
                  1: [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
              }
              point3f[] points.timeSamples = {
                  1: [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
              }
            }
          }
        }

        "inherit_unlocked" {
          def Xform "world" (
            al_usdmaya_lock = "unlocked"
          )
          {
            def Mesh "cam" (
              al_usdmaya_lock = "inherited"
            )
            {
              int[] faceVertexCounts.timeSamples = {
                  1: [4, 4, 4, 4, 4, 4]
              }
              int[] faceVertexIndices.timeSamples = {
                  1: [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
              }
              point3f[] points.timeSamples = {
                  1: [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
              }
            }
          }
        }
    }
}
