// Copyright 2019 Autodesk
//
// Copyright 2019 Pixar
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

global proc int mayaUsdTranslatorImport (string $parent,
                                 string $action,
                                 string $initialSettings,
                                 string $resultCallback )
//
//  Description:
//    This script posts the mayaUsd import file translator options.
//    The optionsString is of the form:
//    varName1=value1;varName2=value2;...
//
//  Parameters:
//    $parent - the elf parent layout for this options layout. It is
//            always a scrollLayout.
//    $action - the action that is to be performed with this invocation of this proc.
//        Valid options are:
//        "query" - construct the options string and pass it to the resultCallback.
//        "post" - post all the elf controls.
//        "fileselected" - a file was selected in the import dialog.
//    $initialSettings - the current options string in effect at the time this script is invoked.
//    $resultCallback - This is the proc to be called with the result string.
//            resultCallback ( string $optionsString )
//
//    Returns:
//        1 if successful.
//        0 otherwise.
//
{
    int $bResult = 0;
    int $cw1 = 180;
    int $cw2 = 300;

    if ($action == "post") {
        setParent $parent;

        columnLayout -adj true -rs 5 mayaUsdTranslator_OptsCol;

        if (`exists usdImportDialog`)
        {
            rowLayout -numberOfColumns 3 -cw 1 $cw1 -cat 1 "right" 0;
                text -label "Scope and Variants: "
                    -al "right"
                    -sbm "Select a USD file and click Hierarchy View to open the Hierarchy View window. This window lets you toggle prim checkboxes and non-destructively switch between variants to build the scope of your import."
                    -ann "Select a USD file and click <strong>Hierarchy View</strong> to build the scope of your import and switch variants.<br><br><strong>Scope</strong>: A USD file consists of prims, the primary container object in USD. Prims can contain any scene element, like meshes, lights, cameras, etc. Use the checkboxes in the <strong>Hierarchy View</strong> to select and deselect prims to build the scope of your import.<br><br><strong>Variant</strong>: A variant is a single, named variation of a variant set. Each variant set is a package of alternatives that users can switch between non-destructively. A variant set has no limits to what it can store. Variants can be used to swap out a material or change the entire hierarchy of an asset. A single prim can have many variants and variant sets, but only one variant from each variant set can be selected for import into Maya."
                ;
                textField -ed false -nbg true -text "Please select a file to enable this option" -w $cw2 mayaUsdTranslator_SelectFileField;
                button -label "Hierarchy View" -c "string $usdFile = currentFileDialogSelection(); usdImportDialog $usdFile;" mayaUsdTranslator_ViewHierBtn;

                // Hide the button by default.
                button -e -visible false mayaUsdTranslator_ViewHierBtn;
            setParent ..;
        }
//        checkBoxGrp -label "Load Payloads: " -cw 1 $cw1 mayaUsdTranslator_LoadPayloadsCheckBox;
//
//        optionMenuGrp -label "Coordinate System: " -cw 1 $cw1 mayaUsdTranslator_CoordSystemOptionMenu;
//            menuItem -label "Local space";
//            menuItem -label "Object space";
//            menuItem -label "World space";
//        optionMenuGrp -e -sl 1 mayaUsdTranslator_CoordSystemOptionMenu;
//
//        optionMenuGrp -label "Materials: " -cw 1 $cw1 mayaUsdTranslator_MaterialsOptionMenu;
//            menuItem -label "None";
//            menuItem -label "Display Colors";
//            menuItem -label "USD Shade";
//        optionMenuGrp -e -sl 2 mayaUsdTranslator_MaterialsOptionMenu;
//
//        checkBoxGrp -label "InstancedPrims: " -label1 "Convert to Instances" -cw 1 $cw1 mayaUsdTranslator_InstancedPrimsCheckBox;
//
//        optionMenuGrp -label "Include Metadata: " -cw 1 $cw1 mayaUsdTranslator_IncludeMetadataOptionMenu;
//            menuItem "All";
//            menuItem "None";
//            menuItem "Custom";
//        optionMenuGrp -e -sl 3 mayaUsdTranslator_IncludeMetadataOptionMenu;
//
//        textFieldGrp -label "Specify Fields: " -cw 1 $cw2 -cw 2 150 mayaUsdTranslator_SpecifyFields;
//
//        textFieldGrp -label "Prefix Name: " -cw 1 $cw2 -cw 2 50 mayaUsdTranslator_PrefixName;
//
//        optionMenuGrp -label "Include Custom Attributes: " -cw 1 $cw1 mayaUsdTranslator_IncludeCustomAttribOptionMenu;
//            menuItem "All";
//            menuItem "None";
//            menuItem "Custom";
//        optionMenuGrp -e -sl 2 mayaUsdTranslator_IncludeCustomAttribOptionMenu;

        checkBoxGrp -label "Animation Data: " -cw 1 $cw1 -cc ("mayaUsdTranslatorImport_AnimationCB") mayaUsdTranslator_AnimDataCheckBox;

        checkBoxGrp -label "Custom Frame Range: " -cw 1 $cw2 -cc ("mayaUsdTranslatorImport_AnimationCB") mayaUsdTranslator_CustomFrameRangeCheckBox;

        intFieldGrp -label "Frame Range Start/End: " -nf 2 -cw 1 $cw2 mayaUsdTranslator_CustomFrameRange;

        // Now set to current settings.
        string $optionList[];
        string $optionBreakDown[];
        int $index;
        string $currentOptions = $initialSettings;
        if (size($currentOptions) > 0) {
            tokenize($currentOptions, ";", $optionList);
            for ($index = 0; $index < size($optionList); $index++) {
                tokenize($optionList[$index], "=", $optionBreakDown);
                if ($optionBreakDown[0] == "readAnimData") {
                    mayaUsdTranslatorImport_SetCheckBoxGrp($optionBreakDown[1], "mayaUsdTranslator_AnimDataCheckBox");
                } else if ($optionBreakDown[0] == "startTime") {
                    int $startTime = $optionBreakDown[1];
                    intFieldGrp -e -value1 $startTime mayaUsdTranslator_CustomFrameRange;
                } else if ($optionBreakDown[0] == "endTime") {
                    int $endTime = $optionBreakDown[1];
                    intFieldGrp -e -value2 $endTime mayaUsdTranslator_CustomFrameRange;
                } else if ($optionBreakDown[0] == "useCustomFrameRange") {
                    mayaUsdTranslatorImport_SetCheckBoxGrp($optionBreakDown[1], "mayaUsdTranslator_CustomFrameRangeCheckBox");
                }
            }
        }

        $bResult = 1;

    } else if ($action == "query") {
        string $currentOptions = "";
        $currentOptions = mayaUsdTranslatorImport_AppendFromDialog($currentOptions, "primPath", "-primPath");
        $currentOptions = mayaUsdTranslatorImport_AppendFromCheckBoxGrp($currentOptions, "readAnimData", "mayaUsdTranslator_AnimDataCheckBox");
        $currentOptions = mayaUsdTranslatorImport_AppendFromCheckBoxGrp($currentOptions, "useCustomFrameRange", "mayaUsdTranslator_CustomFrameRangeCheckBox");
        $currentOptions = mayaUsdTranslatorImport_AppendFromIntFieldGrp($currentOptions, "startTime", 1, "mayaUsdTranslator_CustomFrameRange");
        $currentOptions = mayaUsdTranslatorImport_AppendFromIntFieldGrp($currentOptions, "endTime", 2, "mayaUsdTranslator_CustomFrameRange");

        eval($resultCallback+" \""+$currentOptions+"\"");
        $bResult = 1;

    } else if ($action == "fileselected") {
        if (`exists usdImportDialog`)
        {
            // Clear out the import data since we have a new selection.
            usdImportDialog -clearData "";
        }

        // Test the currently selected file in the import dialog to see if it is
        // a USD file.
        string $filters = `translator -q -f "USD Import"`;
        string $currSel = currentFileDialogSelection();
        int $showBtn = false;
        if (! `filetest -d $currSel`)
        {
            string $ext = `fileExtension $currSel`;
            if (`match $ext $filters` == $ext)
            {
                $showBtn = true;
            }
        }

        if (`textField -exists mayaUsdTranslator_SelectFileField`)
        {
            if ($showBtn)
            {
                // Hide the field (and shrink it) and show the button (which will align with label).
                textField -e -vis false -w 1 mayaUsdTranslator_SelectFileField;
            }
            else
            {
                // Show the field and hide the button.
                textField -e -vis true -w $cw2 mayaUsdTranslator_SelectFileField;
            }
        }

        if (`button -exists mayaUsdTranslator_ViewHierBtn`) {
            button -e -visible $showBtn mayaUsdTranslator_ViewHierBtn;
        }

        $bResult = 1;

    } else {
        $bResult = 0;
    }

    mayaUsdTranslatorImport_AnimationCB();
    return $bResult;
}

global proc mayaUsdTranslatorImport_SetCheckBoxGrp(string $arg, string $widget)
{
    checkBoxGrp -e -value1 ($arg != "0") $widget;
}

global proc mayaUsdTranslatorImport_AnimationCB()
{
    if (`checkBoxGrp -q -value1 mayaUsdTranslator_AnimDataCheckBox` == 1) {
        checkBoxGrp -e -vis true mayaUsdTranslator_CustomFrameRangeCheckBox;
        int $vis = (`checkBoxGrp -q -value1 mayaUsdTranslator_CustomFrameRangeCheckBox` == 1);
        intFieldGrp -e -vis $vis mayaUsdTranslator_CustomFrameRange;
    } else {
        checkBoxGrp -e -vis false mayaUsdTranslator_CustomFrameRangeCheckBox;
        intFieldGrp -e -vis false mayaUsdTranslator_CustomFrameRange;
    }
}

global proc string mayaUsdTranslatorImport_AppendFromCheckBoxGrp(string $currentOptions, string $arg, string $widget)
{
    if (`checkBoxGrp -q -value1 $widget` == 1) {
        return $currentOptions + ";" + $arg + "=1";
    } else {
        return $currentOptions + ";" + $arg + "=0";
    }
}

global proc string mayaUsdTranslatorImport_AppendFromIntFieldGrp(string $currentOptions, string $arg, int $index, string $widget)
{
    string $si = ("-value" + $index);
    string $value = `intFieldGrp -q $si $widget`;
    return $currentOptions + ";" + $arg + "=" + $value;
}

global proc string mayaUsdTranslatorImport_AppendFromDialog(string $currentOptions, string $arg, string $flag)
{
    if (`exists usdImportDialog`)
    {
        string $value = `usdImportDialog -q $flag`;
        if (size($value) > 0)
        {
            return $currentOptions + ";" + $arg + "=" + $value;
        }
    }
}
