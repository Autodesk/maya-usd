// Copyright 2021 Autodesk
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

proc string expandToSelection(string $obj)
{
    if (size($obj)) {
        // If obj is non-empty, expand it to the selection if it is part of the selection.
        return `python("import mayaUsd_selectionUtils; mayaUsd_selectionUtils.expandPathToSelection('" + $obj + "')")`;
    } else {
        // If obj is empty, use the first selected item non-Maya.
        return `python("import maya.internal.ufeSupport.utils as ufeUtils; items = ufeUtils.getNonMayaSelectedItems(); items[0] if items else None")`;
    }
}

global proc mayaUsdMenu_editAsMaya(string $obj)
{
    if (!hasPrimUpdater())
        return;

    if (size($obj) != 0) {
        mayaUsdEditAsMaya $obj;
    }
}

global proc mayaUsdMenu_EditAsMayaDataOptionsCallback(string $optionsString)
{
    optionVar -stringValue usdMaya_EditAsMayaDataOptions $optionsString;
}

global proc mayaUsdMenu_EditAsMayaDataOptionsReset(string $obj)
{
    optionVar -remove usdMaya_EditAsMayaDataOptions;
    mayaUsdMenu_EditAsMayaDataOptions($obj);
}

global proc mayaUsdMenu_ApplyEditAsMayaDataOptions(string $obj, int $closeDialog)
{
    mayaUsdTranslatorImport ("", "query", "", "mayaUsdMenu_EditAsMayaDataOptionsCallback");

    if ($closeDialog) {
        hideOptionBox;
    }

    if (size($obj)) {
        waitCursor -state 1; 
        mayaUsdMenu_editAsMaya $obj; 
        waitCursor -state 0;
    }
}

global proc mayaUsdMenu_EditAsMayaDataOptions(string $obj)
{
    global string $gOptionBoxOptions;
    $gOptionBoxOptions = "noToolAndAction";
    string $layout = getOptionBox();
    setParent $layout;

    setOptionBoxTitle(getMayaUsdString("kEditAsMayaDataOptions"));

    string $optionsString = ";readAnimData=1";
    if (`optionVar -exists usdMaya_EditAsMayaDataOptions`) {
        $optionsString = `optionVar -query usdMaya_EditAsMayaDataOptions`;
    }

    string $optionsScroll = `scrollLayout -cr true editAsMayaDataOptionsFrame`;
    mayaUsdTranslatorImport ($optionsScroll, "post", $optionsString, "mayaUsdMenu_EditAsMayaDataOptionsCallback");

    string $applyCloseBtn = getOptionBoxApplyAndCloseBtn();
    button -edit -label `getMayaUsdString("kEditAsMayaData")`
        -command ("mayaUsdMenu_ApplyEditAsMayaDataOptions(\"" + $obj + "\", 1);")
        $applyCloseBtn;

    string $applyBtn = getOptionBoxApplyBtn();
    button -edit
        -command ("mayaUsdMenu_ApplyEditAsMayaDataOptions(\"" + $obj + "\", 0);")
        $applyBtn;

    string $resetBtn = getOptionBoxResetBtn();
    button -edit 
        -command ("mayaUsdMenu_EditAsMayaDataOptionsReset(\"" + $obj + "\");")
        $resetBtn;

    string $saveBtn = getOptionBoxSaveBtn();
    button -edit 
        -command "mayaUsdTranslatorImport(\"\", \"query\", \"\", \"mayaUsdMenu_EditAsMayaDataOptionsCallback\")"
        $saveBtn;

	string $helpItem = getOptionBoxHelpItem(); 
	if ($helpItem != "") {
		menuItem -edit 
			-label `getMayaUsdString("kHelpOnEditAsMayaDataOptions")`
            -command ("python(\"from mayaUsdUtils import showHelpMayaUSD; showHelpMayaUSD('UsdImportOptionsConfig');\")")
			$helpItem;
	}

    showOptionBox();

    global string $gOptionBox;
    window -e -height 340 $gOptionBox;
}

// On right click in the viewport, either through selection or through a pick
// hit, Maya will look for a procedure called $runTimeName + "MenuProc".
// and call it.  When the selection or pick hit is a USD prim, this calls the
// following procedure.
global proc USDMenuProc(string $parent, string $obj)
{
    $obj = expandToSelection($obj);

    popupMenu -e -dai $parent;
    setParent -menu $parent;
    
    python("import maya.app.ufe.outlinerSupport; maya.app.ufe.outlinerSupport.buildNonMayaContextMenu('''" + $obj + "''')");

    // Allow the user to define a proc with additional menu items
    if (`exists USDUserMenuProc`)
    {
        USDUserMenuProc($parent,$obj);
    }
}