global proc AEmayaUsdProxyShapeInfoNew(string $input)
{
    textFieldGrp -label `getMayaUsdString("kRootLayer")` -editable 0
                 -ann `getMayaUsdString("kRootLayerAnn")`
                 mayaUsdProxyShapeRootLayer;

    textFieldGrp -label `getMayaUsdString("kDefaultPrim")` -editable 0
                 -ann `getMayaUsdString("kDefaultPrimAnn")`
                 mayaUsdProxyShapeDefaultPrim;

    AEmayaUsdProxyShapeInfoReplace($input);
}

global proc AEmayaUsdProxyShapeInfoReplace(string $input)
{
    // From the input attribute we simply want the node name.
    string $nodeName = plugNode($input);
    string $res[] = `ls -l $nodeName`;
    string $fullNodeName = $res[0];

    // Call python helpers to get the info we want to display.
    string $rootLayer   = `python("import AETemplateHelpers; AETemplateHelpers.GetRootLayerName('" + $fullNodeName + "')")`;
    string $defaultPrim = `python("import AETemplateHelpers; AETemplateHelpers.GetDefaultPrimName('" + $fullNodeName + "')")`;

    textFieldGrp -edit -text $rootLayer mayaUsdProxyShapeRootLayer;
    textFieldGrp -edit -text $defaultPrim mayaUsdProxyShapeDefaultPrim;
}

global proc AEmayaUsdProxyShapePayloadsNew(string $loadPayloads)
{
    setUITemplate -pst attributeEditorTemplate;
    rowLayout -nc 5 -cl5 "right" "center" "center" "center" "center";
        text -label `getMayaUsdString("kPayloads")` -ann `getMayaUsdString("kPayloadsAnn")`;
        button -label `getMayaUsdString("kLoadAll")` payloadsLoadAllBtn;
        button -label `getMayaUsdString("kUnloadAll")` payloadsUnloadAllBtn;
        text -label "";
        text -label "";
    setParent ..;
    setUITemplate -ppt;
    AEmayaUsdProxyShapePayloadsReplace($loadPayloads);
}

global proc AEmayaUsdProxyShapePayloadsReplace(string $loadPayloads)
{
    // From the input attribute we simply want the node name.
    string $nodeName = plugNode($loadPayloads);
    string $res[] = `ls -l $nodeName`;
    string $fullNodeName = $res[0];

    button -e -c ("mayaUsdStageLoadAll(\"" + $fullNodeName + "\")") payloadsLoadAllBtn;
    button -e -c ("mayaUsdStageUnloadAll(\"" + $fullNodeName + "\")") payloadsUnloadAllBtn;
}

global proc AEmayaUsdProxyShapeFilePathNew(string $filePathAttr)
{
    setUITemplate -pst attributeEditorTemplate;
    columnLayout -adj true;
        rowLayout -nc 4 -adj 2;
            text -label `uiRes("m_scriptEditorPanel.kFile")` -ann `getMayaUsdString("kFileAnn")`;
            textField mayaUsdProxyShapeFilePath;
            symbolButton -image "navButtonBrowse.png" mayaUsdProxyShapeFilePathBrowser;
            symbolButton -image "refresh.png" mayaUsdProxyShapeFilePathRefresh;
        setParent ..;
    setUITemplate -ppt;

    AEmayaUsdProxyShapeFilePathReplace($filePathAttr);
}

global proc AEmayaUsdProxyShapeFilePathReplace(string $filePathAttr)
{
    // We don't want to connect FilePath control to the filePath attribute because we
    // want to perform special validation on input before loading any new file.
    // So do NOT use "connectControl" command.

    string $currFilePath = `getAttr $filePathAttr`;
    textField -e -fileName $currFilePath -changeCommand ("AEmayaUsdProxyShapeFilePathField(\"" + $filePathAttr + "\"\, \"" + $currFilePath + "\")") mayaUsdProxyShapeFilePath;
    symbolButton -e -c ("AEmayaUsdProxyShapeFilePathBrowser(\"" + $filePathAttr + "\")") mayaUsdProxyShapeFilePathBrowser;
    symbolButton -e -c ("AEmayaUsdProxyShapeFilePathRefresh(\"" + $filePathAttr + "\")") -enable `size($currFilePath)` mayaUsdProxyShapeFilePathRefresh;

    // Add a script job on the filepath attribute so we can update the AE control
    // if the attribute changes from the outside.
    global int $mayaUsdProxyShapeFilePathScriptJobId = -1;
    if (`scriptJob -exists $mayaUsdProxyShapeFilePathScriptJobId`)
        scriptJob -kill $mayaUsdProxyShapeFilePathScriptJobId;
    string $cmd = "AEmayaUsdProxyShapeFilePathChanged(\"" + $filePathAttr + "\")";
    $mayaUsdProxyShapeFilePathScriptJobId = `scriptJob -parent mayaUsdProxyShapeFilePath -attributeChange $filePathAttr $cmd`;
}

// Called with file path attribute text field changes.
global proc AEmayaUsdProxyShapeFilePathField(string $filePathAttr, string $currFilePath)
{
    string $newFilePath = `textField -q -fileName mayaUsdProxyShapeFilePath`;
    int $result = python("import AETemplateHelpers; AETemplateHelpers.ProxyShapeFilePathChanged('" + $filePathAttr + "', newFilePath='" + $newFilePath + "')");
    if ($result == 0) {
        // The proxy shape file path update was rejected (no setAttr was done).
        // Reset the field back to its original value.
        textField -e -fileName $currFilePath mayaUsdProxyShapeFilePath;
    }
}

// Called when user clicks the file path browser button.
global proc AEmayaUsdProxyShapeFilePathBrowser(string $filePathAttr)
{
    python("import AETemplateHelpers; AETemplateHelpers.ProxyShapeFilePathChanged('" + $filePathAttr + "')");
}

// Called when the user clicks the file path refresh button.
global proc AEmayaUsdProxyShapeFilePathRefresh(string $filePathAttr)
{
    python("import AETemplateHelpers; AETemplateHelpers.ProxyShapeFilePathRefresh('" + $filePathAttr + "')");
}

// Called in response to attributeChange notif on filePath attribute.
global proc AEmayaUsdProxyShapeFilePathChanged(string $filePathAttr)
{
    // The Proxy Shape file path attribute was changed outside so we need to set
    // the new value in our field and enable/disable the refresh button.
    string $filePath = `getAttr $filePathAttr`;
    textField -edit -fileName $filePath mayaUsdProxyShapeFilePath;
    symbolButton -edit -enable `size($filePath)` mayaUsdProxyShapeFilePathRefresh;
}

// Callback used from editorTemplate -callCustom
global proc AEmayaUsdProxyShapePurposeNew(string $drawGuidePurposeAttr, string $drawProxyPurposeAttr, string $drawRenderPurposeAttr)
{
    checkBoxGrp
        -numberOfCheckBoxes 3
        -label `getMayaUsdString("kPurposeLabel")`
        -ann `getMayaUsdString("kPurposeAnn")`
        -label1 `getMayaUsdString("kPurposeOption1")`
        -label2 `getMayaUsdString("kPurposeOption2")`
        -label3 `getMayaUsdString("kPurposeOption3")`
        purposeCheckBoxGrp;
    AEmayaUsdProxyShapePurposeReplace($drawGuidePurposeAttr, $drawProxyPurposeAttr, $drawRenderPurposeAttr);
}

// Callback used from editorTemplate -callCustom
global proc AEmayaUsdProxyShapePurposeReplace(string $drawGuidePurposeAttr, string $drawProxyPurposeAttr, string $drawRenderPurposeAttr)
{
    checkBoxGrp -edit
        -value1 `getAttr($drawGuidePurposeAttr)`
        -value2 `getAttr($drawProxyPurposeAttr)`
        -value3 `getAttr($drawRenderPurposeAttr)`
        -changeCommand1 ("setAttr " + $drawGuidePurposeAttr + " #1")
        -changeCommand2 ("setAttr " + $drawProxyPurposeAttr + " #1")
        -changeCommand3 ("setAttr " + $drawRenderPurposeAttr + " #1")
        purposeCheckBoxGrp;

    // Add a script Job on each attribute so we can update the UI
    // if the attributes change.
    global int $purposeCheckBoxGrpValue1ScriptJobId = -1;
    global int $purposeCheckBoxGrpValue2ScriptJobId = -1;
    global int $purposeCheckBoxGrpValue3ScriptJobId = -1;
    if(`scriptJob -exists $purposeCheckBoxGrpValue1ScriptJobId`)
        scriptJob -kill $purposeCheckBoxGrpValue1ScriptJobId;
    if(`scriptJob -exists $purposeCheckBoxGrpValue2ScriptJobId`)
        scriptJob -kill $purposeCheckBoxGrpValue2ScriptJobId;
    if(`scriptJob -exists $purposeCheckBoxGrpValue3ScriptJobId`)
        scriptJob -kill $purposeCheckBoxGrpValue3ScriptJobId;
    $cmd1 = "checkBoxGrp -edit -value1 `getAttr " + $drawGuidePurposeAttr + "` purposeCheckBoxGrp;";
    $cmd2 = "checkBoxGrp -edit -value2 `getAttr " + $drawProxyPurposeAttr + "` purposeCheckBoxGrp;";
    $cmd3 = "checkBoxGrp -edit -value3 `getAttr " + $drawRenderPurposeAttr + "` purposeCheckBoxGrp;";
    $purposeCheckBoxGrpValue1ScriptJobId = `scriptJob -parent purposeCheckBoxGrp -attributeChange $drawGuidePurposeAttr  $cmd1`;
    $purposeCheckBoxGrpValue2ScriptJobId = `scriptJob -parent purposeCheckBoxGrp -attributeChange $drawProxyPurposeAttr  $cmd2`;
    $purposeCheckBoxGrpValue3ScriptJobId = `scriptJob -parent purposeCheckBoxGrp -attributeChange $drawRenderPurposeAttr $cmd3`;
}

global proc AEmayaUsdProxyShapeBaseTemplate( string $nodeName )
{
    editorTemplate -beginScrollLayout;

        //
        // Proxy Shape specific attributes
        //
        editorTemplate -suppress "complexity";
        editorTemplate -suppress "inStageData";
        editorTemplate -suppress "stageCacheId";
        editorTemplate -suppress "outStageCacheId";

        // MAYA-109438 - temp suppress these non-functional attributes.
        editorTemplate -suppress "primPath";
        editorTemplate -suppress "loadPayloads";

        editorTemplate -beginLayout `getMayaUsdString("kLabelStage")` -collapse 0;
            // We aren't displaying the "inStageData" attribute in the ProxyShapeInfo. We simply
            // pass it in order to get the current nodename. Cannot use the input one here as it
            // changes based on which proxy shape the AE is viewing.
            editorTemplate -callCustom "AEmayaUsdProxyShapeInfoNew" "AEmayaUsdProxyShapeInfoReplace" inStageData;

            editorTemplate -callCustom "AEmayaUsdProxyShapePayloadsNew" "AEmayaUsdProxyShapePayloadsReplace" loadPayloads;
        editorTemplate -endLayout;

        editorTemplate -beginLayout `getMayaUsdString("kLabelStageSource")` -collapse 0;
            editorTemplate -callCustom "AEmayaUsdProxyShapeFilePathNew" "AEmayaUsdProxyShapeFilePathReplace" "filePath";
        editorTemplate -endLayout;

        editorTemplate -beginLayout `getMayaUsdString("kLabelStageDisplay")` -collapse 0;
            editorTemplate -ann `getMayaUsdString("kTimeAnn")`
                           -addControl "time";
            editorTemplate -callCustom 
                "AEmayaUsdProxyShapePurposeNew"
                "AEmayaUsdProxyShapePurposeReplace"
                "drawGuidePurpose"
                "drawProxyPurpose"
                "drawRenderPurpose";
            //editorTemplate -addControl "primPath";
            editorTemplate -ann `getMayaUsdString("kExcludePrimPathsAnn")`
                           -addControl "excludePrimPaths";
        editorTemplate -endLayout;


        // Object Display (from AEdagNodeCommon.mel):
        editorTemplate -beginLayout (uiRes("m_AEshapeTemplate.kObjectDisplay"));
            editorTemplate -beginNoOptimize;
                editorTemplate -suppress "template";
                editorTemplate -suppress "hideOnPlayback";
                editorTemplate -suppress "displayHWEnvironment";
                editorTemplate -suppress "ignoreHwShader";
                editorTemplate -suppress "intermediateObject";
                editorTemplate -suppress "hardwareFogMultiplier";
                editorTemplate -addControl "visibility";
                editorTemplate -label (uiRes("m_AEdagNodeCommon.kLODVisibility")) -addControl "lodVisibility";
                editorTemplate -callCustom "AEhiddenInOutlinerNew" "AEhiddenInOutlinerReplace" "hiddenInOutliner";
                editorTemplate -callCustom "AEuseOutlinerColorNew" "AEuseOutlinerColorReplace" "useOutlinerColor";
                editorTemplate -callCustom "AEoutlinerColorNew" "AEoutlinerColorReplace" "outlinerColor";
            editorTemplate -endNoOptimize;
        editorTemplate -endLayout;

        // Bounding Box Information (from AEdagNodeCommon.mel):
        editorTemplate -beginLayout (uiRes("m_AEdagNodeCommon.kBoundingBoxInformation"));
            editorTemplate -suppress "boundingBox";
            editorTemplate -callCustom AEnewBbox AEreplaceBbox "boundingBoxMin" "boundingBoxMax";
        editorTemplate -endLayout;

        // UUID (from AEdependNodeTemplate.mel):
        editorTemplate -beginLayout (uiRes("m_AEdependNodeTemplate.kUUID"));
            editorTemplate -suppress "nodeState";
            editorTemplate -callCustom "AEdependNodeUUIDNew" "AEdependNodeUUIDReplace" "nodeState";
        editorTemplate -endLayout;

        // Displacement Map (completely remove):
        editorTemplate -suppress "featureDisplacement";
        editorTemplate -suppress "initialSampleRate";
        editorTemplate -suppress "extraSampleRate";
        editorTemplate -suppress "textureThreshold";
        editorTemplate -suppress "normalThreshold";
        editorTemplate -suppress "boundingBoxScale";

        // Render Stats (completely remove):
        editorTemplate -suppress "castsShadows";
        editorTemplate -suppress "receiveShadows";
        editorTemplate -suppress "holdOut";
        editorTemplate -suppress "motionBlur";
        editorTemplate -suppress "primaryVisibility";
        editorTemplate -suppress "smoothShading";
        editorTemplate -suppress "visibleInReflections";
        editorTemplate -suppress "visibleInRefractions";
        editorTemplate -suppress "doubleSided";
        editorTemplate -suppress "checkDoubleSided";
        editorTemplate -suppress "opposite";
        editorTemplate -suppress "geometryAntialiasingOverride";
        editorTemplate -suppress "checkGeomAntialiasingOverride";
        editorTemplate -suppress "antialiasingLevel";
        editorTemplate -suppress "shadingSamplesOverride";
        editorTemplate -suppress "checkGeomShadingSamplesOverride";
        editorTemplate -suppress "shadingSamples";
        editorTemplate -suppress "maxShadingSamples";
        editorTemplate -suppress "volumeSamplesOverride";
        editorTemplate -suppress "volumeSamples";
        editorTemplate -suppress "depthJitter";

        // 3D Motion Blur (completely remove):
        editorTemplate -suppress "maxVisibilitySamplesOverride";
        editorTemplate -suppress "maxVisibilitySamples";

        // Ghosting Information (completely remove):
        editorTemplate -suppress "ghosting";
        editorTemplate -suppress "ghostingMode";
        editorTemplate -suppress "ghostingControl";
        editorTemplate -suppress "ghostCustomSteps";
        editorTemplate -suppress "ghostsBefore";
        editorTemplate -suppress "ghostsAfter";
        editorTemplate -suppress "ghostsStep";
        editorTemplate -suppress "ghostFrames";
        editorTemplate -suppress "ghostOpacityRange";
        editorTemplate -suppress "ghostFarOpacity";
        editorTemplate -suppress "ghostNearOpacity";
        editorTemplate -suppress "ghostColorPre";
        editorTemplate -suppress "ghostColorPreR";
        editorTemplate -suppress "ghostColorPreG";
        editorTemplate -suppress "ghostColorPreB";
        editorTemplate -suppress "ghostColorPreA";
        editorTemplate -suppress "ghostColorPost";
        editorTemplate -suppress "ghostColorPostR";
        editorTemplate -suppress "ghostColorPostG";
        editorTemplate -suppress "ghostColorPostB";
        editorTemplate -suppress "ghostColorPostA";
        editorTemplate -suppress "ghostDriver";
        editorTemplate -suppress "ghostUseDriver";
        editorTemplate -suppress "ghostRangeStart";
        editorTemplate -suppress "ghostRangeEnd";

        // Drawing Overrides (completely remove):
        editorTemplate -suppress "overrideDisplayType";
        editorTemplate -suppress "overrideLevelOfDetail";
        editorTemplate -suppress "overrideShading";
        editorTemplate -suppress "overrideTexturing";
        editorTemplate -suppress "overridePlayback";
        editorTemplate -suppress "overrideEnabled";
        editorTemplate -suppress "overrideVisibility";
        editorTemplate -suppress "overrideRGBColors";
        editorTemplate -suppress "overrideColor";
        editorTemplate -suppress "overrideColorRGB";

        // Selection (completely remove):
        editorTemplate -suppress "selectionChildHighlighting";

        // Node Behavior (completely remove):
        editorTemplate -suppress "caching";
        editorTemplate -suppress "frozen";

        // Remove miscellaneous control point attributes (from AEcontrolPointTemplate.mel):
        editorTemplate -suppress "controlPoints";
        editorTemplate -suppress "weights";
        editorTemplate -suppress "tweak";
        editorTemplate -suppress "relativeTweak";
        editorTemplate -suppress "currentUVSet";
        editorTemplate -suppress "currentColorSet";
        editorTemplate -suppress "uvSet";
        editorTemplate -suppress "displayColors";
        editorTemplate -suppress "displayColorChannel";
        editorTemplate -suppress "displayImmediate";
        editorTemplate -suppress "colorSet";

        // Remove miscellaneous dag node attributes (from AEdagNodeCommon.mel):
        editorTemplate -suppress "drawOverride";
        editorTemplate -suppress "useObjectColor";
        editorTemplate -suppress "objectColor";
        editorTemplate -suppress "objectColorRGB";
        editorTemplate -suppress "center";
        editorTemplate -suppress "matrix";
        editorTemplate -suppress "inverseMatrix";
        editorTemplate -suppress "worldMatrix";
        editorTemplate -suppress "worldInverseMatrix";
        editorTemplate -suppress "parentMatrix";
        editorTemplate -suppress "parentInverseMatrix";
        editorTemplate -suppress "instObjGroups";
        editorTemplate -suppress "wireColorRGB";

        // Remove miscellaneous dag node attributes (from AEdagNodeInclude.mel):
        editorTemplate -suppress "renderInfo";
        editorTemplate -suppress "renderLayerInfo";

        // Remove miscellaneous dag node attributes (from AEcontainerNodeSuppress.mel):
        editorTemplate -suppress "hyperLayout";
        editorTemplate -suppress "isCollapsed";
        editorTemplate -suppress "blackBox";
        editorTemplate -suppress "borderConnections";
        editorTemplate -suppress "isHierarchicalConnection";
        editorTemplate -suppress "publishedNodeInfo";
        editorTemplate -suppress "publishedNode";
        editorTemplate -suppress "publishedNodeType";
        editorTemplate -suppress "rmbCommand";
        editorTemplate -suppress "templateName";
        editorTemplate -suppress "templatePath";
        editorTemplate -suppress "templateVersion";
        editorTemplate -suppress "iconName";
        editorTemplate -suppress "viewMode";
        editorTemplate -suppress "viewName";
        editorTemplate -suppress "uiTreatment";
        editorTemplate -suppress "customTreatment";
        editorTemplate -suppress "creator";
        editorTemplate -suppress "creationDate";
        editorTemplate -suppress "containerType";

        // Remove miscellaneous dag node attributes (from AEgeometryShapeTemplate.mel):
        editorTemplate -suppress "normalThreshold";

        // Remove iscellaneous dag node attributes (from componenttags/ae_template.py):
        editorTemplate -suppress "componentTags";

        // Remove miscellaneous attributes (from Extra Attributes):
        editorTemplate -suppress "compInstObjGroups";
        editorTemplate -suppress "ignoreSelfShadowing";
        editorTemplate -suppress "collisionOffsetVelocityIncrement";
        editorTemplate -suppress "collisionDepthVelocityIncrement";
        editorTemplate -suppress "collisionOffsetVelocityMultiplier";
        editorTemplate -suppress "collisionDepthVelocityMultiplier";

        editorTemplate -addExtraControls;

    editorTemplate -endScrollLayout;
}
