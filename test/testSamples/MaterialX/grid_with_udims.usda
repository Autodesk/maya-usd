#usda 1.0
(
    defaultPrim = "pPlane1"
    metersPerUnit = 0.01
    upAxis = "Y"
)

def Mesh "pPlane1" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    uniform bool doubleSided = 1
    float3[] extent = [(-0.5, 0, -0.5), (0.5, 0, 0.5)]
    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4]
    int[] faceVertexIndices = [0, 1, 5, 4, 1, 2, 6, 5, 2, 3, 7, 6, 4, 5, 9, 8, 5, 6, 10, 9, 6, 7, 11, 10, 8, 9, 13, 12, 9, 10, 14, 13, 10, 11, 15, 14]
    rel material:binding = </pPlane1/mtl/standardSurface2SG>
    normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
        interpolation = "faceVarying"
    )
    point3f[] points = [(-0.5, 0, 0.5), (-0.16666666, 0, 0.5), (0.16666669, 0, 0.5), (0.5, 0, 0.5), (-0.5, 0, 0.16666666), (-0.16666666, 0, 0.16666666), (0.16666669, 0, 0.16666666), (0.5, 0, 0.16666666), (-0.5, 0, -0.16666669), (-0.16666666, 0, -0.16666669), (0.16666669, 0, -0.16666669), (0.5, 0, -0.16666669), (-0.5, 0, -0.5), (-0.16666666, 0, -0.5), (0.16666669, 0, -0.5), (0.5, 0, -0.5)]
    color3f[] primvars:displayColor = [(0.13320851, 0.13320851, 0.13320851)] (
        customData = {
            dictionary Maya = {
                bool generated = 1
            }
        }
    )
    texCoord2f[] primvars:st = [(0.1, 0.1), (0.9, 0.1), (1.9, 0.1), (2.9, 0.1), (3.1, 0.1), (4.1, 0.1), (5.1, 0.1), (2.9, 0.9), (9.1, 0.1), (1.1, 2.1), (5.1, 5.1), (5.9, 0.9), (9.1, 0.9), (1.1, 2.9), (5.1, 5.9), (5.9, 5.9), (9.9, 0.9), (4.1, 0.9), (3.9, 0.9), (9.9, 0.1), (3.1, 0.9), (1.9, 2.9), (5.9, 5.1), (5.1, 0.9), (4.9, 0.9), (1.9, 2.1), (2.1, 0.9), (1.9, 0.9), (4.9, 0.1), (5.9, 0.1), (1.1, 0.9), (0.9, 0.9), (3.9, 0.1), (0.1, 0.9), (2.1, 0.1), (1.1, 0.1)] (
        customData = {
            dictionary Maya = {
                token name = "map1"
            }
        }
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices = [0, 1, 31, 33, 35, 2, 27, 30, 34, 3, 7, 26, 4, 32, 18, 20, 5, 28, 24, 17, 6, 29, 11, 23, 8, 19, 16, 12, 9, 25, 21, 13, 10, 22, 15, 14]
    uniform token subdivisionScheme = "none"

    def Scope "mtl"
    {
        def Material "standardSurface2SG"
        {
            string inputs:file2:varname = "st"
            token outputs:mtlx:surface.connect = </pPlane1/mtl/standardSurface2SG/standardSurface2.outputs:out>
            token outputs:surface.connect = </pPlane1/mtl/standardSurface2SG/UsdPreviewSurface1.outputs:surface>

            def Shader "standardSurface2"
            {
                uniform token info:id = "ND_standard_surface_surfaceshader"
                float inputs:base = 0.98667
                color3f inputs:base_color.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG.outputs:baseColor>
                float inputs:diffuse_roughness = 0
                float inputs:emission = 1
                color3f inputs:emission_color.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG.outputs:emissionColor>
                float inputs:metalness = 0
                float inputs:specular = 1
                float inputs:specular_roughness = 0
                token outputs:out
            }

            def NodeGraph "MayaNG_standardSurface2SG"
            {
                string inputs:file2:varname.connect = </pPlane1/mtl/standardSurface2SG.inputs:file2:varname>
                color3f outputs:baseColor.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG/file2_MayafileTexture.outputs:outColor>
                color3f outputs:emissionColor.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG/file2_MayafileTexture.outputs:outColor>

                def Shader "file2"
                {
                    uniform token info:id = "ND_image_color3"
                    asset inputs:file = @textures/diffuse.<UDIM>.jpg@
                    string inputs:filtertype = "linear"
                    float2 inputs:texcoord.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG/place2dTexture2.outputs:out>
                    string inputs:uaddressmode = "periodic"
                    string inputs:vaddressmode = "periodic"
                    color3f outputs:out
                }

                def Shader "file2_MayafileTexture"
                {
                    uniform token info:id = "MayaND_fileTexture_color3"
                    color3f inputs:defaultColor = (0.5, 0.5, 0.5)
                    color3f inputs:inColor.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG/file2.outputs:out>
                    color3f inputs:uvCoord.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG/place2dTexture2.outputs:out>
                    color3f outputs:outColor
                }

                def Shader "place2dTexture2"
                {
                    uniform token info:id = "ND_geompropvalue_vector2"
                    string inputs:geomprop.connect = </pPlane1/mtl/standardSurface2SG/MayaNG_standardSurface2SG.inputs:file2:varname>
                    float2 outputs:out
                }
            }

            def Shader "UsdPreviewSurface1"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect = </pPlane1/mtl/standardSurface2SG/UsdUVTexture1.outputs:rgb>
                color3f inputs:emissiveColor.connect = </pPlane1/mtl/standardSurface2SG/UsdUVTexture1.outputs:rgb>
                token outputs:surface
            }

            def Shader "UsdUVTexture1"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @textures/diffuse.<UDIM>.jpg@
                float2 inputs:st.connect = </pPlane1/mtl/standardSurface2SG/UsdPrimvarReader1.outputs:result>
                float3 outputs:rgb
            }

            def Shader "UsdPrimvarReader1"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                string inputs:varname.connect = </pPlane1/mtl/standardSurface2SG.inputs:file2:varname>
                float2 outputs:result
            }
        }
    }
}

