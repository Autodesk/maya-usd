#usda 1.0
(
    defaultPrim = "pCube1"
    metersPerUnit = 0.01
    upAxis = "Y"
)

def Mesh "pCube1" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    uniform bool doubleSided = 1
    float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
    int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
    rel material:binding = </pCube1/Looks/lambert2SG>
    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
        interpolation = "faceVarying"
    )
    point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
    texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
        customData = {
            dictionary Maya = {
                token name = "map1"
            }
        }
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 9, 8, 1, 10, 11, 3, 12, 0, 2, 13]
    uniform token subdivisionScheme = "none"
    double3 xformOp:translate = (-0.6840338073485981, -0.6536323047997818, 0.037234084329256234)
    uniform token[] xformOpOrder = ["xformOp:translate"]

    def Scope "Looks"
    {
        def Material "lambert2SG"
        {
            string inputs:file1:varnameStr = "st"
            token outputs:mtlx:surface.connect = </pCube1/Looks/lambert2SG/lambert2.outputs:surface>

            def Shader "lambert2"
            {
                uniform token info:id = "MayaND_lambert_surfaceshader"
                color3f inputs:color = (0, 0, 0)
                color3f inputs:color.connect = </pCube1/Looks/lambert2SG/MayaNG_lambert2SG/MayaSwizzle_file1_rgb.outputs:out>
                color3f outputs:outColor
                token outputs:surface
            }

            def NodeGraph "MayaNG_lambert2SG"
            {
                string inputs:file1:varnameStr.connect = </pCube1/Looks/lambert2SG.inputs:file1:varnameStr>

                def Shader "file1"
                {
                    uniform token info:id = "ND_image_color4"
                    color4f inputs:default = (0.5, 0.5, 0.5, 1)
                    asset inputs:file = @textures/grid.png@
                    float2 inputs:texcoord.connect = </pCube1/Looks/lambert2SG/MayaNG_lambert2SG/place2dTexture1.outputs:out>
                    string inputs:uaddressmode = "periodic"
                    string inputs:vaddressmode = "periodic"
                    color4f outputs:out
                }

                def Shader "place2dTexture1"
                {
                    uniform token info:id = "ND_geompropvalue_vector2"
                    string inputs:geomprop.connect = </pCube1/Looks/lambert2SG/MayaNG_lambert2SG.inputs:file1:varnameStr>
                    float2 outputs:out
                }

                def Shader "MayaSwizzle_file1_rgb"
                {
                    uniform token info:id = "ND_swizzle_color4_color3"
                    string inputs:channels = "rgb"
                    color4f inputs:in.connect = </pCube1/Looks/lambert2SG/MayaNG_lambert2SG/file1.outputs:out>
                    color3f outputs:out
                }
            }
        }
    }
}

def Mesh "pCube2" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    uniform bool doubleSided = 1
    float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
    int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
    rel material:binding = </pCube1/Looks/lambert2SG>
    normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
        interpolation = "faceVarying"
    )
    point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
    texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
        customData = {
            dictionary Maya = {
                token name = "map1"
            }
        }
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 9, 8, 1, 10, 11, 3, 12, 0, 2, 13]
    uniform token subdivisionScheme = "none"
    double3 xformOp:translate = (-0.7167478865167949, -0.6968933744249144, 1.797892421246913)
    uniform token[] xformOpOrder = ["xformOp:translate"]

    def Scope "Looks"
    {
        def Material "standardSurface2SG" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            string inputs:file2:varnameStr = "st"
            token outputs:mtlx:surface.connect = </pCube2/Looks/standardSurface2SG/standardSurface2.outputs:surface>
            token outputs:out.connect = </pCube2/Looks/standardSurface2SG/NodeGraph1.outputs:out>
            uniform float2 ui:nodegraph:node:pos = (0.055555556, 0.055555556)

            def Shader "standardSurface2" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                uniform token info:id = "ND_standard_surface_surfaceshader"
                float inputs:base = 1
                color3f inputs:base_color.connect = </pCube2/Looks/standardSurface2SG/MayaNG_standardSurface2SG.outputs:baseColor>
                float inputs:specular = 1
                float inputs:specular_roughness = 0.4
                token outputs:surface
                uniform float2 ui:nodegraph:node:pos = (1.1166667, -0.33888888)
            }

            def NodeGraph "MayaNG_standardSurface2SG" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                string inputs:file2:varnameStr.connect = </pCube2/Looks/standardSurface2SG.inputs:file2:varnameStr>
                color3f outputs:baseColor.connect = </pCube2/Looks/standardSurface2SG/MayaNG_standardSurface2SG/MayaSwizzle_file2_rgb.outputs:out>
                uniform float2 ui:nodegraph:node:pos = (-0.5777778, -0.33888888)

                def Shader "file2"
                {
                    uniform token info:id = "ND_image_color4"
                    color4f inputs:default = (0.5, 0.5, 0.5, 1)
                    asset inputs:file = @textures/grid.png@
                    float2 inputs:texcoord.connect = </pCube2/Looks/standardSurface2SG/MayaNG_standardSurface2SG/place2dTexture2.outputs:out>
                    string inputs:uaddressmode = "periodic"
                    string inputs:vaddressmode = "periodic"
                    color4f outputs:out
                }

                def Shader "place2dTexture2"
                {
                    uniform token info:id = "ND_geompropvalue_vector2"
                    string inputs:geomprop.connect = </pCube2/Looks/standardSurface2SG/MayaNG_standardSurface2SG.inputs:file2:varnameStr>
                    float2 outputs:out
                }

                def Shader "MayaSwizzle_file2_rgb"
                {
                    uniform token info:id = "ND_swizzle_color4_color3"
                    string inputs:channels = "rgb"
                    color4f inputs:in.connect = </pCube2/Looks/standardSurface2SG/MayaNG_standardSurface2SG/file2.outputs:out>
                    color3f outputs:out
                }
            }

            def NodeGraph "NodeGraph1" (
                prepend apiSchemas = ["NodeGraphNodeAPI"]
            )
            {
                token outputs:out.connect = </pCube2/Looks/standardSurface2SG/NodeGraph1/surface1.outputs:out>
                uniform float2 ui:nodegraph:node:pos = (1.0759555, -1.774011)

                def Shader "surface1" (
                    prepend apiSchemas = ["NodeGraphNodeAPI"]
                )
                {
                    uniform token info:id = "ND_surface"
                    token outputs:out
                    uniform float2 ui:nodegraph:node:pos = (1.0496833, -1.7418168)
                }
            }
        }
    }
}

def Mesh "pPlatonic1" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    uniform bool doubleSided = 1
    float3[] extent = [(-0.47552827, -0.49999997, -0.5), (0.47552827, 0.49999997, 0.5)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 12, 13, 12, 2, 14, 12, 14, 13, 13, 14, 1, 0, 15, 12, 15, 3, 16, 15, 16, 12, 12, 16, 2, 0, 17, 15, 17, 4, 18, 17, 18, 15, 15, 18, 3, 0, 19, 17, 19, 5, 20, 19, 20, 17, 17, 20, 4, 0, 13, 19, 13, 1, 21, 13, 21, 19, 19, 21, 5, 1, 14, 22, 14, 2, 23, 14, 23, 22, 22, 23, 7, 2, 16, 24, 16, 3, 25, 16, 25, 24, 24, 25, 8, 3, 18, 26, 18, 4, 27, 18, 27, 26, 26, 27, 9, 4, 20, 28, 20, 5, 29, 20, 29, 28, 28, 29, 10, 5, 21, 30, 21, 1, 31, 21, 31, 30, 30, 31, 6, 1, 22, 31, 22, 7, 32, 22, 32, 31, 31, 32, 6, 2, 24, 23, 24, 8, 33, 24, 33, 23, 23, 33, 7, 3, 26, 25, 26, 9, 34, 26, 34, 25, 25, 34, 8, 4, 28, 27, 28, 10, 35, 28, 35, 27, 27, 35, 9, 5, 30, 29, 30, 6, 36, 30, 36, 29, 29, 36, 10, 6, 32, 37, 32, 7, 38, 32, 38, 37, 37, 38, 11, 7, 33, 38, 33, 8, 39, 33, 39, 38, 38, 39, 11, 8, 34, 39, 34, 9, 40, 34, 40, 39, 39, 40, 11, 9, 35, 40, 35, 10, 41, 35, 41, 40, 40, 41, 11, 10, 36, 41, 36, 6, 37, 36, 37, 41, 41, 37, 11]
    rel material:binding = </pPlatonic1/Looks/blinn1SG>
    normal3f[] normals = [(-8.961551e-8, 4.7166058e-9, -0.99999994), (-0.16245979, 0.49999997, -0.8506509), (0.42532533, 0.309017, -0.85065085), (-0.16245979, 0.49999997, -0.8506509), (-0.27639323, 0.8506508, -0.4472136), (0.26286563, 0.80901694, -0.5257311), (-0.16245979, 0.49999997, -0.8506509), (0.26286563, 0.80901694, -0.5257311), (0.42532533, 0.309017, -0.85065085), (0.42532533, 0.309017, -0.85065085), (0.26286563, 0.80901694, -0.5257311), (0.7236067, 0.5257312, -0.44721362), (-8.961551e-8, 4.7166058e-9, -0.99999994), (-0.525731, 0, -0.8506509), (-0.16245979, 0.49999997, -0.8506509), (-0.525731, 0, -0.8506509), (-0.8944272, -6.131587e-8, -0.4472135), (-0.68819106, 0.49999994, -0.52573115), (-0.525731, 0, -0.8506509), (-0.68819106, 0.49999994, -0.52573115), (-0.16245979, 0.49999997, -0.8506509), (-0.16245979, 0.49999997, -0.8506509), (-0.68819106, 0.49999994, -0.52573115), (-0.27639323, 0.8506508, -0.4472136), (-8.961551e-8, 4.7166058e-9, -0.99999994), (-0.16245987, -0.49999997, -0.85065085), (-0.525731, 0, -0.8506509), (-0.16245987, -0.49999997, -0.85065085), (-0.2763933, -0.85065085, -0.44721344), (-0.68819094, -0.50000006, -0.5257311), (-0.16245987, -0.49999997, -0.85065085), (-0.68819094, -0.50000006, -0.5257311), (-0.525731, 0, -0.8506509), (-0.525731, 0, -0.8506509), (-0.68819094, -0.50000006, -0.5257311), (-0.8944272, -6.131587e-8, -0.4472135), (-8.961551e-8, 4.7166058e-9, -0.99999994), (0.42532533, -0.30901697, -0.85065085), (-0.16245987, -0.49999997, -0.85065085), (0.42532533, -0.30901697, -0.85065085), (0.7236067, -0.52573115, -0.44721362), (0.26286548, -0.80901706, -0.52573115), (0.42532533, -0.30901697, -0.85065085), (0.26286548, -0.80901706, -0.52573115), (-0.16245987, -0.49999997, -0.85065085), (-0.16245987, -0.49999997, -0.85065085), (0.26286548, -0.80901706, -0.52573115), (-0.2763933, -0.85065085, -0.44721344), (-8.961551e-8, 4.7166058e-9, -0.99999994), (0.42532533, 0.309017, -0.85065085), (0.42532533, -0.30901697, -0.85065085), (0.42532533, 0.309017, -0.85065085), (0.7236067, 0.5257312, -0.44721362), (0.85065085, 2.2347578e-8, -0.5257311), (0.42532533, 0.309017, -0.85065085), (0.85065085, 2.2347578e-8, -0.5257311), (0.42532533, -0.30901697, -0.85065085), (0.42532533, -0.30901697, -0.85065085), (0.85065085, 2.2347578e-8, -0.5257311), (0.7236067, -0.52573115, -0.44721362), (0.7236067, 0.5257312, -0.44721362), (0.26286563, 0.80901694, -0.5257311), (0.58778524, 0.809017, 1.7878063e-8), (0.26286563, 0.80901694, -0.5257311), (-0.27639323, 0.8506508, -0.4472136), (2.12302e-8, 1, 1.2067693e-7), (0.26286563, 0.80901694, -0.5257311), (2.12302e-8, 1, 1.2067693e-7), (0.58778524, 0.809017, 1.7878063e-8), (0.58778524, 0.809017, 1.7878063e-8), (2.12302e-8, 1, 1.2067693e-7), (0.27639312, 0.8506508, 0.44721362), (-0.27639323, 0.8506508, -0.4472136), (-0.68819106, 0.49999994, -0.52573115), (-0.58778524, 0.80901694, -8.93903e-9), (-0.68819106, 0.49999994, -0.52573115), (-0.8944272, -6.131587e-8, -0.4472135), (-0.95105654, 0.30901697, 1.7878062e-8), (-0.68819106, 0.49999994, -0.52573115), (-0.95105654, 0.30901697, 1.7878062e-8), (-0.58778524, 0.80901694, -8.93903e-9), (-0.58778524, 0.80901694, -8.93903e-9), (-0.95105654, 0.30901697, 1.7878062e-8), (-0.72360677, 0.5257311, 0.44721362), (-0.8944272, -6.131587e-8, -0.4472135), (-0.68819094, -0.50000006, -0.5257311), (-0.9510565, -0.3090171, 4.469516e-8), (-0.68819094, -0.50000006, -0.5257311), (-0.2763933, -0.85065085, -0.44721344), (-0.5877852, -0.80901706, 5.8103712e-8), (-0.68819094, -0.50000006, -0.5257311), (-0.5877852, -0.80901706, 5.8103712e-8), (-0.9510565, -0.3090171, 4.469516e-8), (-0.9510565, -0.3090171, 4.469516e-8), (-0.5877852, -0.80901706, 5.8103712e-8), (-0.7236067, -0.5257312, 0.4472136), (-0.2763933, -0.85065085, -0.44721344), (0.26286548, -0.80901706, -0.52573115), (4.022564e-8, -1, 1.3855498e-7), (0.26286548, -0.80901706, -0.52573115), (0.7236067, -0.52573115, -0.44721362), (0.58778524, -0.809017, 8.939032e-9), (0.26286548, -0.80901706, -0.52573115), (0.58778524, -0.809017, 8.939032e-9), (4.022564e-8, -1, 1.3855498e-7), (4.022564e-8, -1, 1.3855498e-7), (0.58778524, -0.809017, 8.939032e-9), (0.27639323, -0.8506508, 0.44721362), (0.7236067, -0.52573115, -0.44721362), (0.85065085, 2.2347578e-8, -0.5257311), (0.9510565, -0.30901706, -8.045129e-8), (0.85065085, 2.2347578e-8, -0.5257311), (0.7236067, 0.5257312, -0.44721362), (0.9510565, 0.30901703, 0), (0.85065085, 2.2347578e-8, -0.5257311), (0.9510565, 0.30901703, 0), (0.9510565, -0.30901706, -8.045129e-8), (0.9510565, -0.30901706, -8.045129e-8), (0.9510565, 0.30901703, 0), (0.8944272, 7.54657e-8, 0.44721362), (0.7236067, 0.5257312, -0.44721362), (0.58778524, 0.809017, 1.7878063e-8), (0.9510565, 0.30901703, 0), (0.58778524, 0.809017, 1.7878063e-8), (0.27639312, 0.8506508, 0.44721362), (0.688191, 0.5, 0.52573115), (0.58778524, 0.809017, 1.7878063e-8), (0.688191, 0.5, 0.52573115), (0.9510565, 0.30901703, 0), (0.9510565, 0.30901703, 0), (0.688191, 0.5, 0.52573115), (0.8944272, 7.54657e-8, 0.44721362), (-0.27639323, 0.8506508, -0.4472136), (-0.58778524, 0.80901694, -8.93903e-9), (2.12302e-8, 1, 1.2067693e-7), (-0.58778524, 0.80901694, -8.93903e-9), (-0.72360677, 0.5257311, 0.44721362), (-0.26286557, 0.80901706, 0.5257311), (-0.58778524, 0.80901694, -8.93903e-9), (-0.26286557, 0.80901706, 0.5257311), (2.12302e-8, 1, 1.2067693e-7), (2.12302e-8, 1, 1.2067693e-7), (-0.26286557, 0.80901706, 0.5257311), (0.27639312, 0.8506508, 0.44721362), (-0.8944272, -6.131587e-8, -0.4472135), (-0.9510565, -0.3090171, 4.469516e-8), (-0.95105654, 0.30901697, 1.7878062e-8), (-0.9510565, -0.3090171, 4.469516e-8), (-0.7236067, -0.5257312, 0.4472136), (-0.85065085, -1.6621586e-7, 0.525731), (-0.9510565, -0.3090171, 4.469516e-8), (-0.85065085, -1.6621586e-7, 0.525731), (-0.95105654, 0.30901697, 1.7878062e-8), (-0.95105654, 0.30901697, 1.7878062e-8), (-0.85065085, -1.6621586e-7, 0.525731), (-0.72360677, 0.5257311, 0.44721362), (-0.2763933, -0.85065085, -0.44721344), (4.022564e-8, -1, 1.3855498e-7), (-0.5877852, -0.80901706, 5.8103712e-8), (4.022564e-8, -1, 1.3855498e-7), (0.27639323, -0.8506508, 0.44721362), (-0.26286545, -0.80901706, 0.5257311), (4.022564e-8, -1, 1.3855498e-7), (-0.26286545, -0.80901706, 0.5257311), (-0.5877852, -0.80901706, 5.8103712e-8), (-0.5877852, -0.80901706, 5.8103712e-8), (-0.26286545, -0.80901706, 0.5257311), (-0.7236067, -0.5257312, 0.4472136), (0.7236067, -0.52573115, -0.44721362), (0.9510565, -0.30901706, -8.045129e-8), (0.58778524, -0.809017, 8.939032e-9), (0.9510565, -0.30901706, -8.045129e-8), (0.8944272, 7.54657e-8, 0.44721362), (0.688191, -0.5, 0.5257311), (0.9510565, -0.30901706, -8.045129e-8), (0.688191, -0.5, 0.5257311), (0.58778524, -0.809017, 8.939032e-9), (0.58778524, -0.809017, 8.939032e-9), (0.688191, -0.5, 0.5257311), (0.27639323, -0.8506508, 0.44721362), (0.8944272, 7.54657e-8, 0.44721362), (0.688191, 0.5, 0.52573115), (0.52573115, 3.7990883e-8, 0.85065085), (0.688191, 0.5, 0.52573115), (0.27639312, 0.8506508, 0.44721362), (0.16245979, 0.5, 0.8506508), (0.688191, 0.5, 0.52573115), (0.16245979, 0.5, 0.8506508), (0.52573115, 3.7990883e-8, 0.85065085), (0.52573115, 3.7990883e-8, 0.85065085), (0.16245979, 0.5, 0.8506508), (-9.4332115e-9, -1.4149817e-8, 0.99999994), (0.27639312, 0.8506508, 0.44721362), (-0.26286557, 0.80901706, 0.5257311), (0.16245979, 0.5, 0.8506508), (-0.26286557, 0.80901706, 0.5257311), (-0.72360677, 0.5257311, 0.44721362), (-0.42532542, 0.30901697, 0.85065085), (-0.26286557, 0.80901706, 0.5257311), (-0.42532542, 0.30901697, 0.85065085), (0.16245979, 0.5, 0.8506508), (0.16245979, 0.5, 0.8506508), (-0.42532542, 0.30901697, 0.85065085), (-9.4332115e-9, -1.4149817e-8, 0.99999994), (-0.72360677, 0.5257311, 0.44721362), (-0.85065085, -1.6621586e-7, 0.525731), (-0.42532542, 0.30901697, 0.85065085), (-0.85065085, -1.6621586e-7, 0.525731), (-0.7236067, -0.5257312, 0.4472136), (-0.4253253, -0.30901703, 0.85065085), (-0.85065085, -1.6621586e-7, 0.525731), (-0.4253253, -0.30901703, 0.85065085), (-0.42532542, 0.30901697, 0.85065085), (-0.42532542, 0.30901697, 0.85065085), (-0.4253253, -0.30901703, 0.85065085), (-9.4332115e-9, -1.4149817e-8, 0.99999994), (-0.7236067, -0.5257312, 0.4472136), (-0.26286545, -0.80901706, 0.5257311), (-0.4253253, -0.30901703, 0.85065085), (-0.26286545, -0.80901706, 0.5257311), (0.27639323, -0.8506508, 0.44721362), (0.16245988, -0.49999997, 0.8506508), (-0.26286545, -0.80901706, 0.5257311), (0.16245988, -0.49999997, 0.8506508), (-0.4253253, -0.30901703, 0.85065085), (-0.4253253, -0.30901703, 0.85065085), (0.16245988, -0.49999997, 0.8506508), (-9.4332115e-9, -1.4149817e-8, 0.99999994), (0.27639323, -0.8506508, 0.44721362), (0.688191, -0.5, 0.5257311), (0.16245988, -0.49999997, 0.8506508), (0.688191, -0.5, 0.5257311), (0.8944272, 7.54657e-8, 0.44721362), (0.52573115, 3.7990883e-8, 0.85065085), (0.688191, -0.5, 0.5257311), (0.52573115, 3.7990883e-8, 0.85065085), (0.16245988, -0.49999997, 0.8506508), (0.16245988, -0.49999997, 0.8506508), (0.52573115, 3.7990883e-8, 0.85065085), (-9.4332115e-9, -1.4149817e-8, 0.99999994)] (
        interpolation = "faceVarying"
    )
    point3f[] points = [(0, 0, -0.5), (0.3618034, 0.26286554, -0.2236068), (-0.13819663, 0.42532545, -0.22360682), (-0.44721365, -3.909666e-8, -0.22360682), (-0.13819665, -0.4253254, -0.2236068), (0.36180338, -0.26286557, -0.2236068), (0.44721365, 0, 0.22360682), (0.13819659, 0.42532542, 0.2236068), (-0.36180344, 0.26286554, 0.22360682), (-0.36180338, -0.2628656, 0.2236068), (0.13819666, -0.4253254, 0.2236068), (0, 0, 0.5), (-0.08122993, 0.24999999, -0.42532542), (0.21266271, 0.15450849, -0.42532542), (0.13143277, 0.40450847, -0.26286554), (-0.26286554, -2.2980437e-8, -0.42532542), (-0.3440955, 0.24999997, -0.26286554), (-0.08122995, -0.24999999, -0.42532542), (-0.3440955, -0.25, -0.26286554), (0.2126627, -0.1545085, -0.42532542), (0.13143276, -0.40450853, -0.26286557), (0.42532542, -1.7517365e-8, -0.26286554), (0.29389262, 0.40450847, 0), (-1.7517365e-8, 0.49999997, 0), (-0.29389262, 0.40450847, 0), (-0.47552827, 0.15450846, 0), (-0.4755282, -0.15450855, 0), (-0.29389262, -0.4045085, 0), (8.758683e-9, -0.49999997, 0), (0.29389265, -0.40450847, 0), (0.47552827, -0.15450852, 0), (0.47552827, 0.15450849, 0), (0.34409547, 0.25, 0.26286554), (-0.13143279, 0.40450847, 0.26286554), (-0.42532542, -5.2552096e-8, 0.26286554), (-0.13143273, -0.4045085, 0.26286554), (0.3440955, -0.24999999, 0.26286554), (0.26286554, 0, 0.42532542), (0.08122992, 0.25, 0.42532542), (-0.21266271, 0.15450847, 0.42532542), (-0.2126627, -0.15450852, 0.42532542), (0.08122996, -0.24999999, 0.42532542)]
    texCoord2f[] primvars:st = [(1, 0.5), (0.83810407, 0.67620814), (0.088104114, 0.8237918), (0.1762082, 0.5), (0.088104114, 0.17620823), (0.8381041, 0.32379177), (0.6762082, 0.5), (0.58810407, 0.82379186), (0.3381041, 0.67620814), (0.3381041, 0.32379177), (0.5881041, 0.17620823), (0.5, 0.5), (0.030034225, 0.6666667), (0.9262082, 0.59999996), (0.9262082, 0.8), (0.08810408, 0.5), (0.146174, 0.6666667), (0.030034225, 0.3333333), (0.146174, 0.3333333), (0.9262082, 0.39999998), (0.9262082, 0.19999997), (0.83810407, 0.5), (0.75, 0.8), (0.25, 1), (0.25, 0.8), (0.25, 0.59999996), (0.25, 0.39999995), (0.25, 0.19999997), (0.75, 1), (0.75, 0.20000005), (0.75, 0.39999998), (0.75, 0.59999996), (0.64617395, 0.6666667), (0.42620817, 0.8), (0.33810407, 0.49999994), (0.4262082, 0.19999997), (0.646174, 0.3333333), (0.58810407, 0.5), (0.5300342, 0.6666667), (0.4262082, 0.59999996), (0.4262082, 0.39999998), (0.53003424, 0.3333333), (1.0300342, 0.6666667), (1.0881041, 0.8237918), (1.0881041, 0.5), (1.0300342, 0.3333333), (1.0881041, 0.17620823), (1.25, 1)] (
        customData = {
            dictionary Maya = {
                token name = "map1"
            }
        }
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices = [0, 42, 13, 42, 43, 14, 42, 14, 13, 13, 14, 1, 0, 44, 42, 15, 3, 16, 15, 16, 12, 12, 16, 2, 0, 45, 44, 17, 4, 18, 17, 18, 15, 15, 18, 3, 0, 19, 45, 19, 5, 20, 19, 20, 45, 45, 20, 46, 0, 13, 19, 13, 1, 21, 13, 21, 19, 19, 21, 5, 1, 14, 22, 14, 43, 47, 14, 47, 22, 22, 23, 7, 2, 16, 24, 16, 3, 25, 16, 25, 24, 24, 25, 8, 3, 18, 26, 18, 4, 27, 18, 27, 26, 26, 27, 9, 46, 20, 28, 20, 5, 29, 20, 29, 28, 28, 29, 10, 5, 21, 30, 21, 1, 31, 21, 31, 30, 30, 31, 6, 1, 22, 31, 22, 7, 32, 22, 32, 31, 31, 32, 6, 2, 24, 23, 24, 8, 33, 24, 33, 23, 23, 33, 7, 3, 26, 25, 26, 9, 34, 26, 34, 25, 25, 34, 8, 46, 28, 27, 28, 10, 35, 28, 35, 27, 27, 35, 9, 5, 30, 29, 30, 6, 36, 30, 36, 29, 29, 36, 10, 6, 32, 37, 32, 7, 38, 32, 38, 37, 37, 38, 11, 7, 33, 38, 33, 8, 39, 33, 39, 38, 38, 39, 11, 8, 34, 39, 34, 9, 40, 34, 40, 39, 39, 40, 11, 9, 35, 40, 35, 10, 41, 35, 41, 40, 40, 41, 11, 10, 36, 41, 36, 6, 37, 36, 37, 41, 41, 37, 11]
    uniform token subdivisionScheme = "none"
    double3 xformOp:translate = (-0.20195283836005995, 1.0531949097272095, 1.5372357673085828)
    uniform token[] xformOpOrder = ["xformOp:translate"]

    def Scope "Looks"
    {
        def Material "blinn1SG"
        {
            string inputs:file3:varnameStr = "st"
            token outputs:mtlx:surface.connect = </pPlatonic1/Looks/blinn1SG/blinn1.outputs:surface>

            def Shader "blinn1"
            {
                uniform token info:id = "MayaND_blinn_surfaceshader"
                color3f inputs:color = (0, 0, 0)
                color3f inputs:color.connect = </pPlatonic1/Looks/blinn1SG/MayaNG_blinn1SG/MayaSwizzle_file3_rgb.outputs:out>
                color3f inputs:specularColor = (1, 1, 0)
                color3f outputs:outColor
                token outputs:surface
            }

            def NodeGraph "MayaNG_blinn1SG"
            {
                string inputs:file3:varnameStr.connect = </pPlatonic1/Looks/blinn1SG.inputs:file3:varnameStr>

                def Shader "file3"
                {
                    uniform token info:id = "ND_image_color4"
                    color4f inputs:default = (0.5, 0.5, 0.5, 1)
                    asset inputs:file = @textures/grid.png@
                    float2 inputs:texcoord.connect = </pPlatonic1/Looks/blinn1SG/MayaNG_blinn1SG/place2dTexture3.outputs:out>
                    string inputs:uaddressmode = "periodic"
                    string inputs:vaddressmode = "periodic"
                    color4f outputs:out
                }

                def Shader "place2dTexture3"
                {
                    uniform token info:id = "ND_geompropvalue_vector2"
                    string inputs:geomprop.connect = </pPlatonic1/Looks/blinn1SG/MayaNG_blinn1SG.inputs:file3:varnameStr>
                    float2 outputs:out
                }

                def Shader "MayaSwizzle_file3_rgb"
                {
                    uniform token info:id = "ND_swizzle_color4_color3"
                    string inputs:channels = "rgb"
                    color4f inputs:in.connect = </pPlatonic1/Looks/blinn1SG/MayaNG_blinn1SG/file3.outputs:out>
                    color3f outputs:out
                }
            }
        }
    }
}

def Mesh "pPlatonic2" (
    prepend apiSchemas = ["MaterialBindingAPI"]
    kind = "component"
)
{
    uniform bool doubleSided = 1
    float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [1, 6, 8, 6, 7, 12, 6, 12, 8, 8, 12, 9, 7, 2, 10, 7, 10, 12, 12, 10, 11, 12, 11, 9, 9, 11, 0, 2, 13, 10, 13, 14, 17, 13, 17, 10, 10, 17, 11, 14, 3, 15, 14, 15, 17, 17, 15, 16, 17, 16, 11, 11, 16, 0, 3, 18, 15, 18, 19, 22, 18, 22, 15, 15, 22, 16, 19, 4, 20, 19, 20, 22, 22, 20, 21, 22, 21, 16, 16, 21, 0, 0, 21, 9, 21, 20, 25, 21, 25, 9, 9, 25, 8, 20, 4, 23, 20, 23, 25, 25, 23, 24, 25, 24, 8, 8, 24, 1, 5, 26, 28, 26, 27, 30, 26, 30, 28, 28, 30, 29, 27, 2, 7, 27, 7, 30, 30, 7, 6, 30, 6, 29, 29, 6, 1, 5, 31, 26, 31, 32, 33, 31, 33, 26, 26, 33, 27, 32, 3, 14, 32, 14, 33, 33, 14, 13, 33, 13, 27, 27, 13, 2, 5, 34, 31, 34, 35, 36, 34, 36, 31, 31, 36, 32, 35, 4, 19, 35, 19, 36, 36, 19, 18, 36, 18, 32, 32, 18, 3, 5, 28, 34, 28, 29, 37, 28, 37, 34, 34, 37, 35, 29, 1, 24, 29, 24, 37, 37, 24, 23, 37, 23, 35, 35, 23, 4]
    rel material:binding = </pPlatonic2/Looks/phong1SG>
    normal3f[] normals = [(1, 0, 0), (0.8572056, 0.5149743, -3.262045e-8), (0.8572056, -8.155113e-9, 0.5149743), (0.8572056, 0.5149743, -3.262045e-8), (0.51497436, 0.85720557, -8.155112e-9), (0.5773503, 0.5773503, 0.57735026), (0.8572056, 0.5149743, -3.262045e-8), (0.5773503, 0.5773503, 0.57735026), (0.8572056, -8.155113e-9, 0.5149743), (0.8572056, -8.155113e-9, 0.5149743), (0.5773503, 0.5773503, 0.57735026), (0.5149743, 0, 0.8572056), (0.51497436, 0.85720557, -8.155112e-9), (0, 1, 0), (2.8542896e-8, 0.8572056, 0.51497436), (0.51497436, 0.85720557, -8.155112e-9), (2.8542896e-8, 0.8572056, 0.51497436), (0.5773503, 0.5773503, 0.57735026), (0.5773503, 0.5773503, 0.57735026), (2.8542896e-8, 0.8572056, 0.51497436), (-8.155111e-9, 0.51497436, 0.8572055), (0.5773503, 0.5773503, 0.57735026), (-8.155111e-9, 0.51497436, 0.8572055), (0.5149743, 0, 0.8572056), (0.5149743, 0, 0.8572056), (-8.155111e-9, 0.51497436, 0.8572055), (0, 0, 1), (0, 1, 0), (-0.51497436, 0.8572056, 8.155113e-9), (2.8542896e-8, 0.8572056, 0.51497436), (-0.51497436, 0.8572056, 8.155113e-9), (-0.85720557, 0.51497436, -1.6310224e-8), (-0.57735026, 0.57735026, 0.5773503), (-0.51497436, 0.8572056, 8.155113e-9), (-0.57735026, 0.57735026, 0.5773503), (2.8542896e-8, 0.8572056, 0.51497436), (2.8542896e-8, 0.8572056, 0.51497436), (-0.57735026, 0.57735026, 0.5773503), (-8.155111e-9, 0.51497436, 0.8572055), (-0.85720557, 0.51497436, -1.6310224e-8), (-1, 0, 0), (-0.8572056, 4.0775565e-9, 0.51497436), (-0.85720557, 0.51497436, -1.6310224e-8), (-0.8572056, 4.0775565e-9, 0.51497436), (-0.57735026, 0.57735026, 0.5773503), (-0.57735026, 0.57735026, 0.5773503), (-0.8572056, 4.0775565e-9, 0.51497436), (-0.51497436, 2.8542892e-8, 0.8572056), (-0.57735026, 0.57735026, 0.5773503), (-0.51497436, 2.8542892e-8, 0.8572056), (-8.155111e-9, 0.51497436, 0.8572055), (-8.155111e-9, 0.51497436, 0.8572055), (-0.51497436, 2.8542892e-8, 0.8572056), (0, 0, 1), (-1, 0, 0), (-0.8572056, -0.5149743, -3.262045e-8), (-0.8572056, 4.0775565e-9, 0.51497436), (-0.8572056, -0.5149743, -3.262045e-8), (-0.51497436, -0.85720557, -8.155112e-9), (-0.5773503, -0.5773503, 0.57735026), (-0.8572056, -0.5149743, -3.262045e-8), (-0.5773503, -0.5773503, 0.57735026), (-0.8572056, 4.0775565e-9, 0.51497436), (-0.8572056, 4.0775565e-9, 0.51497436), (-0.5773503, -0.5773503, 0.57735026), (-0.51497436, 2.8542892e-8, 0.8572056), (-0.51497436, -0.85720557, -8.155112e-9), (0, -1, 0), (-1.6310224e-8, -0.8572056, 0.5149743), (-0.51497436, -0.85720557, -8.155112e-9), (-1.6310224e-8, -0.8572056, 0.5149743), (-0.5773503, -0.5773503, 0.57735026), (-0.5773503, -0.5773503, 0.57735026), (-1.6310224e-8, -0.8572056, 0.5149743), (-8.155112e-9, -0.5149744, 0.85720557), (-0.5773503, -0.5773503, 0.57735026), (-8.155112e-9, -0.5149744, 0.85720557), (-0.51497436, 2.8542892e-8, 0.8572056), (-0.51497436, 2.8542892e-8, 0.8572056), (-8.155112e-9, -0.5149744, 0.85720557), (0, 0, 1), (0, 0, 1), (-8.155112e-9, -0.5149744, 0.85720557), (0.5149743, 0, 0.8572056), (-8.155112e-9, -0.5149744, 0.85720557), (-1.6310224e-8, -0.8572056, 0.5149743), (0.5773503, -0.5773503, 0.57735026), (-8.155112e-9, -0.5149744, 0.85720557), (0.5773503, -0.5773503, 0.57735026), (0.5149743, 0, 0.8572056), (0.5149743, 0, 0.8572056), (0.5773503, -0.5773503, 0.57735026), (0.8572056, -8.155113e-9, 0.5149743), (-1.6310224e-8, -0.8572056, 0.5149743), (0, -1, 0), (0.51497424, -0.85720557, 2.4465333e-8), (-1.6310224e-8, -0.8572056, 0.5149743), (0.51497424, -0.85720557, 2.4465333e-8), (0.5773503, -0.5773503, 0.57735026), (0.5773503, -0.5773503, 0.57735026), (0.51497424, -0.85720557, 2.4465333e-8), (0.8572056, -0.51497436, -3.262045e-8), (0.5773503, -0.5773503, 0.57735026), (0.8572056, -0.51497436, -3.262045e-8), (0.8572056, -8.155113e-9, 0.5149743), (0.8572056, -8.155113e-9, 0.5149743), (0.8572056, -0.51497436, -3.262045e-8), (1, 0, 0), (0, 0, -1), (2.0387782e-8, 0.5149743, -0.8572056), (0.5149743, -8.155113e-9, -0.8572056), (2.0387782e-8, 0.5149743, -0.8572056), (8.155113e-9, 0.8572056, -0.51497436), (0.5773503, 0.57735026, -0.5773503), (2.0387782e-8, 0.5149743, -0.8572056), (0.5773503, 0.57735026, -0.5773503), (0.5149743, -8.155113e-9, -0.8572056), (0.5149743, -8.155113e-9, -0.8572056), (0.5773503, 0.57735026, -0.5773503), (0.8572056, 0, -0.5149744), (8.155113e-9, 0.8572056, -0.51497436), (0, 1, 0), (0.51497436, 0.85720557, -8.155112e-9), (8.155113e-9, 0.8572056, -0.51497436), (0.51497436, 0.85720557, -8.155112e-9), (0.5773503, 0.57735026, -0.5773503), (0.5773503, 0.57735026, -0.5773503), (0.51497436, 0.85720557, -8.155112e-9), (0.8572056, 0.5149743, -3.262045e-8), (0.5773503, 0.57735026, -0.5773503), (0.8572056, 0.5149743, -3.262045e-8), (0.8572056, 0, -0.5149744), (0.8572056, 0, -0.5149744), (0.8572056, 0.5149743, -3.262045e-8), (1, 0, 0), (0, 0, -1), (-0.51497436, -4.0775565e-9, -0.8572056), (2.0387782e-8, 0.5149743, -0.8572056), (-0.51497436, -4.0775565e-9, -0.8572056), (-0.85720557, -4.0775565e-9, -0.51497436), (-0.57735026, 0.57735026, -0.57735026), (-0.51497436, -4.0775565e-9, -0.8572056), (-0.57735026, 0.57735026, -0.57735026), (2.0387782e-8, 0.5149743, -0.8572056), (2.0387782e-8, 0.5149743, -0.8572056), (-0.57735026, 0.57735026, -0.57735026), (8.155113e-9, 0.8572056, -0.51497436), (-0.85720557, -4.0775565e-9, -0.51497436), (-1, 0, 0), (-0.85720557, 0.51497436, -1.6310224e-8), (-0.85720557, -4.0775565e-9, -0.51497436), (-0.85720557, 0.51497436, -1.6310224e-8), (-0.57735026, 0.57735026, -0.57735026), (-0.57735026, 0.57735026, -0.57735026), (-0.85720557, 0.51497436, -1.6310224e-8), (-0.51497436, 0.8572056, 8.155113e-9), (-0.57735026, 0.57735026, -0.57735026), (-0.51497436, 0.8572056, 8.155113e-9), (8.155113e-9, 0.8572056, -0.51497436), (8.155113e-9, 0.8572056, -0.51497436), (-0.51497436, 0.8572056, 8.155113e-9), (0, 1, 0), (0, 0, -1), (-2.0387782e-8, -0.5149743, -0.8572056), (-0.51497436, -4.0775565e-9, -0.8572056), (-2.0387782e-8, -0.5149743, -0.8572056), (-8.155113e-9, -0.8572056, -0.51497436), (-0.5773503, -0.57735026, -0.5773503), (-2.0387782e-8, -0.5149743, -0.8572056), (-0.5773503, -0.57735026, -0.5773503), (-0.51497436, -4.0775565e-9, -0.8572056), (-0.51497436, -4.0775565e-9, -0.8572056), (-0.5773503, -0.57735026, -0.5773503), (-0.85720557, -4.0775565e-9, -0.51497436), (-8.155113e-9, -0.8572056, -0.51497436), (0, -1, 0), (-0.51497436, -0.85720557, -8.155112e-9), (-8.155113e-9, -0.8572056, -0.51497436), (-0.51497436, -0.85720557, -8.155112e-9), (-0.5773503, -0.57735026, -0.5773503), (-0.5773503, -0.57735026, -0.5773503), (-0.51497436, -0.85720557, -8.155112e-9), (-0.8572056, -0.5149743, -3.262045e-8), (-0.5773503, -0.57735026, -0.5773503), (-0.8572056, -0.5149743, -3.262045e-8), (-0.85720557, -4.0775565e-9, -0.51497436), (-0.85720557, -4.0775565e-9, -0.51497436), (-0.8572056, -0.5149743, -3.262045e-8), (-1, 0, 0), (0, 0, -1), (0.5149743, -8.155113e-9, -0.8572056), (-2.0387782e-8, -0.5149743, -0.8572056), (0.5149743, -8.155113e-9, -0.8572056), (0.8572056, 0, -0.5149744), (0.57735026, -0.57735026, -0.57735026), (0.5149743, -8.155113e-9, -0.8572056), (0.57735026, -0.57735026, -0.57735026), (-2.0387782e-8, -0.5149743, -0.8572056), (-2.0387782e-8, -0.5149743, -0.8572056), (0.57735026, -0.57735026, -0.57735026), (-8.155113e-9, -0.8572056, -0.51497436), (0.8572056, 0, -0.5149744), (1, 0, 0), (0.8572056, -0.51497436, -3.262045e-8), (0.8572056, 0, -0.5149744), (0.8572056, -0.51497436, -3.262045e-8), (0.57735026, -0.57735026, -0.57735026), (0.57735026, -0.57735026, -0.57735026), (0.8572056, -0.51497436, -3.262045e-8), (0.51497424, -0.85720557, 2.4465333e-8), (0.57735026, -0.57735026, -0.57735026), (0.51497424, -0.85720557, 2.4465333e-8), (-8.155113e-9, -0.8572056, -0.51497436), (-8.155113e-9, -0.8572056, -0.51497436), (0.51497424, -0.85720557, 2.4465333e-8), (0, -1, 0)] (
        interpolation = "faceVarying"
    )
    point3f[] points = [(0, 0, 0.5), (0.5, 0, 0), (0, 0.5, 0), (-0.5, 0, 0), (0, -0.5, 0), (0, 0, -0.5), (0.4472136, 0.22360677, 0), (0.22360681, 0.4472136, 0), (0.4472136, 0, 0.22360677), (0.22360681, 0, 0.4472136), (0, 0.4472136, 0.22360677), (0, 0.22360681, 0.4472136), (0.28867516, 0.28867513, 0.28867513), (-0.22360677, 0.4472136, 0), (-0.4472136, 0.22360681, 0), (-0.4472136, 0, 0.22360677), (-0.22360681, 0, 0.4472136), (-0.28867513, 0.28867516, 0.28867513), (-0.4472136, -0.22360677, 0), (-0.22360681, -0.4472136, 0), (0, -0.4472136, 0.22360677), (0, -0.22360681, 0.4472136), (-0.28867516, -0.28867513, 0.28867513), (0.22360677, -0.4472136, 0), (0.4472136, -0.22360681, 0), (0.28867516, -0.28867516, 0.28867513), (0, 0.22360677, -0.4472136), (0, 0.4472136, -0.22360681), (0.22360677, 0, -0.4472136), (0.4472136, 0, -0.22360681), (0.28867513, 0.28867513, -0.28867516), (-0.22360677, 0, -0.4472136), (-0.4472136, 0, -0.22360681), (-0.28867513, 0.28867513, -0.28867516), (0, -0.22360677, -0.4472136), (0, -0.4472136, -0.22360681), (-0.28867513, -0.28867513, -0.28867516), (0.28867513, -0.28867513, -0.28867516)]
    texCoord2f[] primvars:st = [(0.5, 0.5), (0.75, 0.5), (0.5, 1), (0.25, 0.5), (0.5, 1), (1, 0.5), (0.75, 0.6475836), (0.75, 0.8524164), (0.6762082, 0.5), (0.5737918, 0.5), (0.5, 0.8524164), (0.5, 0.64758366), (0.625, 0.69591326), (0.25, 0.8524164), (0.25, 0.64758366), (0.3237918, 0.5), (0.4262082, 0.5), (0.375, 0.6959133), (0.25, 0.3524164), (0.25, 0.14758359), (0.5, 0.14758359), (0.5, 0.3524164), (0.375, 0.30408674), (0.75, 0.14758359), (0.75, 0.3524164), (0.625, 0.3040867), (1, 0.6475836), (1, 0.8524164), (0.9262082, 0.5), (0.8237918, 0.5), (0.875, 0.69591326), (0.073791794, 0.5), (0.1762082, 0.5), (0.125, 0.69591326), (1, 0.3524164), (1, 0.14758359), (0.125, 0.30408674), (0.875, 0.30408674), (1.0737917, 0.5), (1.125, 0.69591326), (1.25, 0.8524164), (1.125, 0.30408674), (1.25, 0.14758359)] (
        customData = {
            dictionary Maya = {
                token name = "map1"
            }
        }
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices = [1, 6, 8, 6, 7, 12, 6, 12, 8, 8, 12, 9, 7, 2, 10, 7, 10, 12, 12, 10, 11, 12, 11, 9, 9, 11, 0, 2, 13, 10, 13, 14, 17, 13, 17, 10, 10, 17, 11, 14, 3, 15, 14, 15, 17, 17, 15, 16, 17, 16, 11, 11, 16, 0, 3, 18, 15, 18, 19, 22, 18, 22, 15, 15, 22, 16, 19, 4, 20, 19, 20, 22, 22, 20, 21, 22, 21, 16, 16, 21, 0, 0, 21, 9, 21, 20, 25, 21, 25, 9, 9, 25, 8, 20, 4, 23, 20, 23, 25, 25, 23, 24, 25, 24, 8, 8, 24, 1, 5, 26, 28, 26, 27, 30, 26, 30, 28, 28, 30, 29, 27, 2, 7, 27, 7, 30, 30, 7, 6, 30, 6, 29, 29, 6, 1, 5, 38, 26, 31, 32, 33, 38, 39, 26, 26, 39, 27, 32, 3, 14, 32, 14, 33, 33, 14, 13, 39, 40, 27, 27, 40, 2, 5, 34, 38, 34, 35, 41, 34, 41, 38, 31, 36, 32, 35, 4, 42, 35, 42, 41, 36, 19, 18, 36, 18, 32, 32, 18, 3, 5, 28, 34, 28, 29, 37, 28, 37, 34, 34, 37, 35, 29, 1, 24, 29, 24, 37, 37, 24, 23, 37, 23, 35, 35, 23, 4]
    uniform token subdivisionScheme = "none"
    double3 xformOp:translate = (0.5081393997446737, 0.6123731227692266, 0.12765971770036622)
    uniform token[] xformOpOrder = ["xformOp:translate"]

    def Scope "Looks"
    {
        def Material "phong1SG"
        {
            string inputs:file4:varnameStr = "st"
            token outputs:mtlx:surface.connect = </pPlatonic2/Looks/phong1SG/phong1.outputs:surface>

            def Shader "phong1"
            {
                uniform token info:id = "MayaND_phong_surfaceshader"
                color3f inputs:color = (0, 0, 0)
                color3f inputs:color.connect = </pPlatonic2/Looks/phong1SG/MayaNG_phong1SG/MayaSwizzle_file4_rgb.outputs:out>
                color3f inputs:specularColor = (1, 0, 1)
                color3f outputs:outColor
                token outputs:surface
            }

            def NodeGraph "MayaNG_phong1SG"
            {
                string inputs:file4:varnameStr.connect = </pPlatonic2/Looks/phong1SG.inputs:file4:varnameStr>

                def Shader "file4"
                {
                    uniform token info:id = "ND_image_color4"
                    color4f inputs:default = (0.5, 0.5, 0.5, 1)
                    asset inputs:file = @textures/grid.png@
                    float2 inputs:texcoord.connect = </pPlatonic2/Looks/phong1SG/MayaNG_phong1SG/place2dTexture4.outputs:out>
                    string inputs:uaddressmode = "periodic"
                    string inputs:vaddressmode = "periodic"
                    color4f outputs:out
                }

                def Shader "place2dTexture4"
                {
                    uniform token info:id = "ND_geompropvalue_vector2"
                    string inputs:geomprop.connect = </pPlatonic2/Looks/phong1SG/MayaNG_phong1SG.inputs:file4:varnameStr>
                    float2 outputs:out
                }

                def Shader "MayaSwizzle_file4_rgb"
                {
                    uniform token info:id = "ND_swizzle_color4_color3"
                    string inputs:channels = "rgb"
                    color4f inputs:in.connect = </pPlatonic2/Looks/phong1SG/MayaNG_phong1SG/file4.outputs:out>
                    color3f outputs:out
                }
            }
        }
    }
}

