#usda 1.0
(
    defaultPrim = "DisplayColorCube"
    endTimeCode = 120
    startTimeCode = 1
)

def Mesh "DisplayColorCube"
{
    float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
    int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
    int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
    normal3f[] normals = [(-0.5773503, -0.5773503, 0.5773503), (0.5773503, -0.5773503, 0.5773503), (-0.5773503, 0.5773503, 0.5773503), (0.5773503, 0.5773503, 0.5773503), (-0.5773503, 0.5773503, -0.5773503), (0.5773503, 0.5773503, -0.5773503), (-0.5773503, -0.5773503, -0.5773503), (0.5773503, -0.5773503, -0.5773503)] (
        interpolation = "vertex"
    )
    point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
    color3f[] primvars:displayColor = [(0.08660001, 0.8203, 0.080200024), (0.8203, 0.7824, 0.080200024), (0.7843, 0.07679997, 0.07679997), (0, 0, 0), (0.8203, 0.080200024, 0.59370005), (0.080200024, 0.17610006, 0.8203), (0.7843, 0.07679997, 0.07679997), (0.080200024, 0.8203, 0.70350003)] (
        interpolation = "vertex"
    )
    float[] primvars:displayOpacity = [1, 1, 1, 1, 1, 1, 1, 1] (
        interpolation = "vertex"
    )
    float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
        interpolation = "faceVarying"
    )
    int[] primvars:st:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 9, 8, 1, 10, 11, 3, 12, 0, 2, 13]
    uniform token[] xformOpOrder = []
    rel material:binding = </DisplayColorCube/Looks/usdPreviewSurface1SG>

    def Scope "Looks"
    {
        def Material "usdPreviewSurface1SG"
        {
            token inputs:coords = "st"
            token outputs:surface.connect = </DisplayColorCube/Looks/usdPreviewSurface1SG/usdPreviewSurface1.outputs:surface>

            def Shader "usdPreviewSurface1"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect = </DisplayColorCube/Looks/usdPreviewSurface1SG/ColorPrimvar.outputs:result>
                token outputs:displacement
                token outputs:surface
            }

            def Shader "Primvar"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                string inputs:varname.connect = </DisplayColorCube/Looks/usdPreviewSurface1SG.inputs:coords>
                float2 outputs:result
            }

            def Shader "ColorPrimvar"
            {
                uniform token info:id = "UsdPrimvarReader_float3"
                string inputs:varname = "displayColor"
                float3 outputs:result
            }
        }
    }
}
