#usda 1.0
(
    defaultPrim = "CubeModel"
    metersPerUnit = 0.01
    upAxis = "Z"
)

def Xform "CubeModel" (
    assetInfo = {
        asset identifier = @./CubeModel.usda@
        string name = "CubeModel"
    }
    kind = "component"
    variants = {
        string shadingVariant = "Red"
    }
    add variantSets = "shadingVariant"
)
{
    def Xform "Geom"
    {
        def Mesh "Cube"
        {
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            uniform token subdivisionScheme = "none"
        }
    }
    variantSet "shadingVariant" = {
        "Blue" {
            over "Geom"
            {
                over "Cube" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </CubeModel/Materials/BlueMaterial>
                    color3f[] primvars:displayColor = [(0, 0, 1)]
                }
            }

        }
        "Green" {
            over "Geom"
            {
                over "Cube" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </CubeModel/Materials/GreenMaterial>
                    color3f[] primvars:displayColor = [(0, 1, 0)]
                }
            }

        }
        "Indigo" {
            over "Geom"
            {
                over "Cube" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </CubeModel/Materials/IndigoMaterial>
                    color3f[] primvars:displayColor = [(0.294, 0, 0.51)]
                }
            }

        }
        "Orange" {
            over "Geom"
            {
                over "Cube" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </CubeModel/Materials/OrangeMaterial>
                    color3f[] primvars:displayColor = [(1, 0.498, 0)]
                }
            }

        }
        "Red" {
            over "Geom"
            {
                over "Cube" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </CubeModel/Materials/RedMaterial>
                    color3f[] primvars:displayColor = [(1, 0, 0)]
                }
            }

        }
        "Violet" {
            over "Geom"
            {
                over "Cube" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </CubeModel/Materials/VioletMaterial>
                    color3f[] primvars:displayColor = [(0.58, 0, 0.827)]
                }
            }

        }
        "Yellow" {
            over "Geom"
            {
                over "Cube" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    rel material:binding = </CubeModel/Materials/YellowMaterial>
                    color3f[] primvars:displayColor = [(1, 1, 0)]
                }
            }

        }
    }

    def Scope "Materials"
    {
        def Material "BlueMaterial" (
            prepend specializes = </CubeModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (0, 0, 1)
        }

        def Material "BaseMaterial"
        {
            color3f inputs:diffuseColor = (0.18, 0.18, 0.18)
            token outputs:surface.connect = </CubeModel/Materials/BaseMaterial/PreviewSurface.outputs:surface>

            def Shader "PreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor.connect = </CubeModel/Materials/BaseMaterial.inputs:diffuseColor>
                float inputs:roughness = 1
                token outputs:surface
            }
        }

        def Material "GreenMaterial" (
            prepend specializes = </CubeModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (0, 1, 0)
        }

        def Material "IndigoMaterial" (
            prepend specializes = </CubeModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (0.294, 0, 0.51)
        }

        def Material "OrangeMaterial" (
            prepend specializes = </CubeModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (1, 0.498, 0)
        }

        def Material "RedMaterial" (
            prepend specializes = </CubeModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (1, 0, 0)
        }

        def Material "VioletMaterial" (
            prepend specializes = </CubeModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (0.58, 0, 0.827)
        }

        def Material "YellowMaterial" (
            prepend specializes = </CubeModel/Materials/BaseMaterial>
        )
        {
            color3f inputs:diffuseColor = (1, 1, 0)
        }
    }
}

