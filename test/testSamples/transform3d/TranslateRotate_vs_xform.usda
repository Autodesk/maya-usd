#usda 1.0
(
    doc = """Generated from Composed Stage of root layer
"""
    endTimeCode = 24
    framesPerSecond = 24
    metersPerUnit = 0.01
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)
def Xform "cameras"
{
    def Xform "cam1"
	{
		matrix4d xformOp:transform = ( (-0.57139380484327007, 0.81603492345170858, 0.087155742747658208, 0.0000000000000000), (-0.36628299622896521, -0.34861706684262317, 0.86272991566282109, 0.0000000000000000), (0.73440172008258775, 0.46103486247051939, 0.49809734904587277, 0.0000000000000000), (5.0000000000000000, 5.0000000000000000, 5.0000000000000000, 1.0000000000000000) )
		uniform token[] xformOpOrder = ["xformOp:transform"]

		def Camera "camera1"
		{
			float2 clippingRange = (0.17281759, 5335.3647)
			float focalLength = 0.5
			float focusDistance = 5
			float fStop = 5.6
			float horizontalAperture = 0.414214
			float horizontalApertureOffset = 0
			token projection = "perspective"
			double shutter:close = 1
			double shutter:open = -1
			float verticalAperture = 0.23299536
			float verticalApertureOffset = 0
		}
		
		def Cone "cone1"
		{
		}
	}
	
	def Xform "cam2"
	{
		double3 xformOp:translate = (5, 5, 5)
		float3 xformOp:rotateXYZ = (60, -5, 125)
		uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ"]
		
		def Camera "camera2"
		{
			float2 clippingRange = (0.17281759, 5335.3647)
			float focalLength = 0.5
			float focusDistance = 5
			float fStop = 5.6
			float horizontalAperture = 0.414214
			float horizontalApertureOffset = 0
			token projection = "perspective"
			double shutter:close = 1
			double shutter:open = -1
			float verticalAperture = 0.23299536
			float verticalApertureOffset = 0
		}
		
		def Cone "cone2"
		{
		}
	}
	
}
def Sphere "sphere1"
{
    float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    double radius = 1
    matrix4d xformOp:transform.timeSamples = {
        1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -5, 1) ),
        2: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -4.944933015533821, 1) ),
        3: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -4.786307224459604, 1) ),
        4: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -4.533985370263829, 1) ),
        5: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -4.197830196432974, 1) ),
        6: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -3.787704446453521, 1) ),
        7: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -3.3134708638119497, 1) ),
        8: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -2.784992191994739, 1) ),
        9: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -2.2121311744883707, 1) ),
        10: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -1.6047505547793204, 1) ),
        11: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -0.9727130763540706, 1) ),
        12: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -0.32588148269910255, 1) ),
        13: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.32588148269910366, 1) ),
        14: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.972713076354073, 1) ),
        15: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 1.6047505547793217, 1) ),
        16: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 2.2121311744883725, 1) ),
        17: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 2.784992191994741, 1) ),
        18: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 3.313470863811952, 1) ),
        19: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 3.7877044464535228, 1) ),
        20: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 4.197830196432975, 1) ),
        21: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 4.53398537026383, 1) ),
        22: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 4.7863072244596045, 1) ),
        23: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 4.944933015533822, 1) ),
        24: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 5, 1) ),
    }
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

