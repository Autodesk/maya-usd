#usda 1.0
(
    defaultPrim = "curve"
    endTimeCode = 1
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "curve" (
    kind = "component"
)
{
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def BasisCurves "curve_0"
    {
        uniform token basis = ""
        int[] curveVertexCounts = [2]
        point3f[] points = [(-10, 10, 10), (-10, -10, 10)] (
            interpolation = "vertex"
        )
        uniform token type = "linear"
        uniform token wrap = "nonperiodic"
    }
}

def "instanced_1" (
    instanceable = true
    append references = </curve>
)
{
    matrix4d xformOp:transform:duplicate1 = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (5, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform", "xformOp:transform:duplicate1"]
	color3f[] primvars:displayColor = [(0, 1, 0)] (
		interpolation = "constant"
	)
}

def "instanced_2" (
    instanceable = true
    append references = </curve>
)
{
    matrix4d xformOp:transform:duplicate1 = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (10, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform", "xformOp:transform:duplicate1"]
	color3f[] primvars:displayColor = [(0, 0, 1)] (
		interpolation = "constant"
	)
}

def "instanced_3" (
    instanceable = true
    append references = </curve>
)
{
    matrix4d xformOp:transform:duplicate1 = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (15, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform", "xformOp:transform:duplicate1"]
}

