#
# Copyright 2020 Autodesk
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
project(mayaUsdUI)

set(MAYAUSDUI_INSTALL_PATH ${CMAKE_INSTALL_PREFIX}/lib)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

add_library(${PROJECT_NAME} SHARED)

# -----------------------------------------------------------------------------
# sources
# -----------------------------------------------------------------------------
target_sources(${PROJECT_NAME} 
    PRIVATE
        ItemDelegate.cpp
        TreeItem.cpp
        TreeModel.cpp
        TreeModelFactory.cpp
        USDImportDialog.cpp
        USDImportDialogCmd.cpp
        USDQtUtil.cpp

        USDImportDialog.ui
        images/ui.qrc
)

# -----------------------------------------------------------------------------
# compiler configuration
# -----------------------------------------------------------------------------
target_compile_definitions(${PROJECT_NAME}
    PRIVATE
        # These flags are needed for Maya
        $<$<BOOL:${IS_MACOSX}>:OSMac_>
        $<$<BOOL:${IS_LINUX}>:LINUX>

        MAYAUSD_UI_EXPORT
)

# QT_NO_KEYWORDS prevents Qt from defining the foreach, signals, slots and emit macros.
# this avoids overlap between Qt macros and boost, and enforces using Q_ macros.
set_target_properties(Qt5::Core PROPERTIES INTERFACE_COMPILE_DEFINITIONS QT_NO_KEYWORDS)

mayaUsd_compile_config(${PROJECT_NAME})

# -----------------------------------------------------------------------------
# link libraries
# -----------------------------------------------------------------------------
target_link_libraries(${PROJECT_NAME}
    PUBLIC
        mayaUsd
    PRIVATE
        Qt5::Core
        Qt5::Gui
        Qt5::Widgets
)

# -----------------------------------------------------------------------------
# run-time search paths
# -----------------------------------------------------------------------------
if(IS_MACOSX OR IS_LINUX)
    mayaUsd_init_rpath(rpath "lib")
    if(DEFINED MAYAUSD_TO_USD_RELATIVE_PATH)
        mayaUsd_add_rpath(rpath "../${MAYAUSD_TO_USD_RELATIVE_PATH}/lib")
    elseif(DEFINED PXR_USD_LOCATION)
        mayaUsd_add_rpath(rpath "${PXR_USD_LOCATION}/lib")
    endif()
    if(IS_LINUX AND DEFINED MAYAUSD_TO_USD_RELATIVE_PATH)
        mayaUsd_add_rpath(rpath "../${MAYAUSD_TO_USD_RELATIVE_PATH}/lib64")
    endif()
    if(IS_MACOSX AND DEFINED MAYAUSD_TO_USD_RELATIVE_PATH)
        mayaUsd_add_rpath(rpath "../../../Maya.app/Contents/MacOS")
    endif()
    mayaUsd_add_rpath(rpath ${MAYAUSDUI_INSTALL_PATH})
    mayaUsd_install_rpath(rpath ${PROJECT_NAME})
endif()

# -----------------------------------------------------------------------------
# promoted headers
# -----------------------------------------------------------------------------
set(headers
    api.h
    IMayaMQtUtil.h
    ItemDelegate.h
    IUSDImportView.h
    TreeItem.h
    TreeModel.h
    TreeModelFactory.h
    USDImportDialog.h
    USDImportDialogCmd.h
    USDQtUtil.h
)

mayaUsd_promoteHeaderList( 
    HEADERS
        ${headers}
    BASEDIR
        ${PROJECT_NAME}/ui
)

# -----------------------------------------------------------------------------
# install
# -----------------------------------------------------------------------------
install(
    TARGETS ${PROJECT_NAME}
    LIBRARY
        DESTINATION ${MAYAUSDUI_INSTALL_PATH}
    ARCHIVE
        DESTINATION ${MAYAUSDUI_INSTALL_PATH}
    RUNTIME
        DESTINATION ${MAYAUSDUI_INSTALL_PATH}
)
if(IS_WINDOWS)
    install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> 
        DESTINATION ${MAYAUSDUI_INSTALL_PATH} OPTIONAL
    )
endif()

install(FILES ${headers}
    DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME}/ui
)

# -----------------------------------------------------------------------------
# test
# -----------------------------------------------------------------------------
if (BUILD_TESTS)
    # A simple executable used to test the import dialog.
    add_subdirectory(demo)
endif()
