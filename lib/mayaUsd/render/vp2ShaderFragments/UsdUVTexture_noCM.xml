<!--
========================================================================
Copyright 2019 Autodesk

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
========================================================================
-->
<fragment uiName="UsdUVTexture_noCM" name="UsdUVTexture_noCM" type="plumbing" class="ShadeFragment" version="1.0" feature_level="0">
    <description>
        <![CDATA[VP2 implementation for UsdUVTexture_noCM.]]>
    </description>
    <properties>
        <texture2 name="file" />
        <sampler name="fileSampler" />
        <float2 name="st" />
        <float2 name="stScale" />
        <float2 name="stOffset" />
        <float4 name="fallback" />
        <float4 name="scale" />
        <float4 name="bias" />
    </properties>
    <values>
        <float2 name="st" value="0.0,0.0" />
        <float2 name="stScale" value="1.0,1.0" />
        <float2 name="stOffset" value="0.0,0.0" />
        <float4 name="fallback" value="0.0,0.0,0.0,1.0" />
        <float4 name="scale" value="1.0,1.0,1.0,1.0" />
        <float4 name="bias" value="0.0,0.0,0.0,0.0" />
    </values>
    <outputs>
        <float4 name="output" />
    </outputs>
    <implementation>
        <implementation render="OGSRenderer" language="GLSL" lang_version="3.0">
            <function_name val="UsdUVTexture_noCM" />
            <source>
                <![CDATA[
vec4 UsdUVTexture_noCM(
    sampler2D fileSampler,
    vec2 st,
    vec2 stScale,
    vec2 stOffset,
    vec4 fallback,
    vec4 scale,
    vec4 bias)
{
    vec2 stScaleOffset = (st + stOffset) * stScale;
    vec2 stFlipped = stScaleOffset * vec2(1, -1) + vec2(0, 1);
    vec4 outColor = texture(fileSampler, stFlipped);
    return outColor * scale + bias;
}
                ]]>
            </source>
        </implementation>
        <implementation render="OGSRenderer" language="HLSL" lang_version="11.0">
            <function_name val="UsdUVTexture_noCM" />
            <source>
                <![CDATA[
float4 UsdUVTexture_noCM(
    Texture2D file,
    sampler fileSampler,
    float2 st,
    float2 stScale,
    float2 stOffset,
    float4 fallback,
    float4 scale,
    float4 bias)
{
    float2 stScaleOffset = (st + stOffset) * stScale;
    float2 stFlipped = stScaleOffset * float2(1, -1) + float2(0, 1);
    float4 outColor = file.Sample(fileSampler, stFlipped);
    return outColor * scale + bias;
}
                ]]>
            </source>
        </implementation>
        <implementation render="OGSRenderer" language="Cg" lang_version="2.1">
            <function_name val="UsdUVTexture_noCM" />
            <source>
                <![CDATA[
float4 UsdUVTexture_noCM(
    texture2D file,
    sampler2D fileSampler,
    float2 st,
    float2 stScale,
    float2 stOffset,
    float4 fallback,
    float4 scale,
    float4 bias)
{
    float2 stScaleOffset = (st + stOffset) * stScale;
    float2 stFlipped = stScaleOffset * float2(1, -1) + float2(0, 1);
    float4 outColor = tex2D(fileSampler, stFlipped);
    return outColor * scale + bias;
} 
                ]]>
            </source>
        </implementation>
    </implementation>
</fragment>
