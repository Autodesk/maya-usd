<!--
========================================================================
Copyright 2020 Autodesk

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
========================================================================
-->
<fragment  uiName="BasisCurvesCubicColorDomain" name="BasisCurvesCubicColorDomain" type="plumbing" class="ShadeFragment" version="1.0" feature_level="50" >
    <description>
        <![CDATA[Tessellation evaluation for varying color]]>
    </description>
    <keyword value="input" />
    <properties>
        <struct name="patchConstants" struct_name="hullConstantsOutS" flags="varyingInputParam" />
        <struct name="patch" size="4" struct_name="hullOutS" />
        <float2 name="domainCoord" semantic="SV_DomainLocation" flags="varyingInputParam" />
        <float4 name="UsdPrimvarColor" semantic="COLOR0" flags="isRequirementOnly,varyingInputParam" />
        <int name="curveBasis" />
    </properties>
    <values>
        <int name="curveBasis" value="0"/>
    </values>
    <outputs>
        <float4 name="BasisCurvesCubicColorDomain" />
    </outputs>
    <implementation  >
        <implementation  render="OGSRenderer" language="GLSL" lang_version="3.000000" >
            <function_name val="BasisCurvesCubicColorDomain" />
            <source>
                <![CDATA[
vec4 BasisCurvesCubicColorDomain(int curveBasis)
{
    float u = gl_TessCoord.y;
    float v = gl_TessCoord.x;

    Coeffs coeffs = evaluateBasis(curveBasis, u, u*u, u*u*u);

    vec4 c0 = DS_IN[0].UsdPrimvarColor;
    vec4 c1 = DS_IN[1].UsdPrimvarColor;
    vec4 c2 = DS_IN[2].UsdPrimvarColor;
    vec4 c3 = DS_IN[3].UsdPrimvarColor;

    return mat4(c0, c1, c2, c3) * coeffs.basis;
}
            ]]>
            </source>
        </implementation>
        <implementation  render="OGSRenderer" language="HLSL" lang_version="11.000000" >
            <function_name val="BasisCurvesCubicColorDomain" />
            <source>
                <![CDATA[
float4 BasisCurvesCubicColorDomain(
    hullConstantsOutS patchConstants,
    hullOutS patch[4],
    float2 domainCoord,
    int curveBasis)
{
    float u = domainCoord.y;
    float v = domainCoord.x;

    Coeffs coeffs = evaluateBasis(curveBasis, u, u*u, u*u*u);

    float4 c0 = patch[0].UsdPrimvarColor;
    float4 c1 = patch[1].UsdPrimvarColor;
    float4 c2 = patch[2].UsdPrimvarColor;
    float4 c3 = patch[3].UsdPrimvarColor;

    return mul(coeffs.basis, float4x4(c0, c1, c2, c3));
}
                ]]>
            </source>
        </implementation>
    </implementation>
</fragment>
