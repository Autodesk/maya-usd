<!--
========================================================================
Copyright 2019 Autodesk

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
========================================================================
-->
<fragment uiName="UsdTransform2d" name="UsdTransform2d" type="plumbing" class="ShadeFragment" version="1.0" feature_level="0">
    <description>
        <![CDATA[VP2 implementation for transform 2d]]>
    </description>
    <properties>
        <float2 name="in" />
        <float name="rotation" />
        <float2 name="scale" />
        <float2 name="translation" />
    </properties>
    <outputs>
        <float2 name="result" />
    </outputs>
    <implementation>
        <implementation render="OGSRenderer" language="GLSL" lang_version="3.0">
            <function_name val="UsdTransform2d" />
            <source>
                <![CDATA[
vec2 UsdTransform2d(vec2 uv, float rotation, vec2 scale, vec2 translation)
{
    float angleRad = rotation * 3.1415926f / 180.f;
    mat2 rotMat = mat2(cos(angleRad),  sin(angleRad), 
                       -sin(angleRad), cos(angleRad)); 
    return translation + rotMat * (scale * uv);
}
                ]]>
            </source>
        </implementation>
        <implementation render="OGSRenderer" language="HLSL" lang_version="11.0">
            <function_name val="UsdTransform2d" />
            <source>
                <![CDATA[
float2 UsdTransform2d(float2 uv, float rotation, float2 scale, float2 translation)
{
    float angleRad = rotation * 3.1415926f / 180.f;
    float2x2 rotMat = float2x2(cos(angleRad), sin(angleRad), 
                               -sin(angleRad), cos(angleRad)); 
    return translation + mul(scale * uv, rotMat);
}
                ]]>
            </source>
        </implementation>
        <implementation render="OGSRenderer" language="Cg" lang_version="2.1">
            <function_name val="UsdTransform2d" />
            <source>
                <![CDATA[
float2 UsdTransform2d(float2 uv, float rotation, float2 scale, float2 translation)
{
    float angleRad = rotation * 3.1415926f / 180.f;
    mat2 rotMat = mat2(cos(angleRad),  -sin(angleRad), 
                       sin(angleRad), cos(angleRad)); 
    return translation + mul(rotMat, scale * uv);
}
                ]]>
            </source>
        </implementation>
    </implementation>
</fragment>
