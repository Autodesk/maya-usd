<!--
========================================================================
Copyright 2018 Pixar
Copyright 2020 Autodesk

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
========================================================================
-->
<fragment_graph name="UsdPreviewSurface" ref="UsdPreviewSurface" class="FragmentGraph" version="1.0" feature_level="0">
    <fragments>
        <!-- Maya fragments for computing dot products for lighting. -->
        <fragment_ref name="mayaHVector" ref="mayaHVector"/>
        <fragment_ref name="mayaShaderGeom" ref="mayaShaderGeom"/>

        <!-- Fragments for extracting computed dot products. -->
        <fragment_ref name="NwFaceCameraIfNAN" ref="NwFaceCameraIfNAN"/>
        <fragment_ref name="mayaShaderGeom_Float4GetX" ref="Float4ToFloatX"/>
        <fragment_ref name="mayaShaderGeom_Float4GetY" ref="Float4ToFloatY"/>
        <fragment_ref name="mayaShaderGeom_Float4GetZ" ref="Float4ToFloatZ"/>
        <fragment_ref name="mayaShaderGeom_Float4GetW" ref="Float4ToFloatW"/>

        <!-- Fragments for computing and accumulating lighting contributions
             and combining them with material properties. -->
        <fragment_ref name="diffuseColorPassThrough" ref="mayafloat3PassThrough"/>
        <fragment_ref name="specularColorPassThrough" ref="mayafloat3PassThrough"/>
        <fragment_ref name="usdPreviewSurfaceLightingAPI1" ref="usdPreviewSurfaceLightingAPI1"/>
        <fragment_ref name="lightingContributions" ref="lightingContributions"/>
        <fragment_ref name="scaledDiffusePassThrough" ref="scaledDiffusePassThrough"/>
        <fragment_ref name="scaledSpecularPassThrough" ref="scaledSpecularPassThrough"/>
        <fragment_ref name="opacityToTransparency" ref="opacityToTransparency"/>
        <fragment_ref name="maya16LightAccum" ref="maya16LightAccum"/>
        <fragment_ref name="usdPreviewSurfaceCombiner" ref="usdPreviewSurfaceCombiner"/>
        <fragment_ref name="useSpecularWorkflowPassThrough" ref="boolPassThrough" />
        <fragment_ref name="metallicPassThrough" ref="floatPassThrough" />
        <fragment_ref name="iorPassThrough" ref="floatPassThrough" />

        <!-- Maya fragments for computing the output surface values. -->
        <fragment_ref name="maya_FogDepthSurface" ref="maya_FogDepthSurface"/>
        <fragment_ref name="mayaComputeSurfaceFinal" ref="mayaComputeSurfaceFinal"/>
        <fragment_ref name="mayaSurfaceShaderOutput" ref="mayaSurfaceShaderOutput"/>
    </fragments>
    <connections>
        <connect from="mayaHVector.mayaHVector" to="mayaShaderGeom.Hw" name="Hw"/>

        <!-- mayaShaderGeom packs the dot products into a float4, so we
             extract them individually for use as parameters to the lighting
             fragment. -->
        <connect from="NwFaceCameraIfNAN.output" to="mayaShaderGeom.Nw" name="Nw"/>
        <connect from="mayaShaderGeom.mayaShaderGeom" to="mayaShaderGeom_Float4GetX.input" name="input"/>
        <connect from="mayaShaderGeom.mayaShaderGeom" to="mayaShaderGeom_Float4GetY.input" name="input"/>
        <connect from="mayaShaderGeom.mayaShaderGeom" to="mayaShaderGeom_Float4GetZ.input" name="input"/>
        <connect from="mayaShaderGeom.mayaShaderGeom" to="mayaShaderGeom_Float4GetW.input" name="input"/>

        <connect from="mayaShaderGeom_Float4GetX.output" to="usdPreviewSurfaceLightingAPI1.NdotL" name="NdotL"/>
        <connect from="mayaShaderGeom_Float4GetY.output" to="usdPreviewSurfaceLightingAPI1.NdotV" name="NdotV"/>
        <connect from="mayaShaderGeom_Float4GetZ.output" to="usdPreviewSurfaceLightingAPI1.NdotH" name="NdotH"/>
        <connect from="mayaShaderGeom_Float4GetW.output" to="usdPreviewSurfaceLightingAPI1.VdotH" name="VdotH"/>
        <connect from="mayaShaderGeom_Float4GetW.output" to="usdPreviewSurfaceCombiner.VdotH" name="VdotH"/>

        <connect from="diffuseColorPassThrough.mayafloat3PassThrough" to="usdPreviewSurfaceLightingAPI1.diffuseColor" name="diffuseColor"/>
        <connect from="specularColorPassThrough.mayafloat3PassThrough" to="usdPreviewSurfaceLightingAPI1.specularColor" name="specularColor"/>
        <connect from="usdPreviewSurfaceLightingAPI1.usdPreviewSurfaceLightingAPI1" to="lightingContributions.lightingContributions" name="lightingContributions"/>
        <connect from="lightingContributions.lightingContributions" to="scaledDiffusePassThrough.lightingContributions" name="lightingContributions"/>
        <connect from="lightingContributions.lightingContributions" to="scaledSpecularPassThrough.lightingContributions" name="lightingContributions"/>
        <connect from="scaledDiffusePassThrough.scaledDiffuse" to="maya16LightAccum.scaledDiffuse" name="scaledDiffuse"/>
        <connect from="scaledSpecularPassThrough.scaledSpecular" to="maya16LightAccum.scaledSpecular" name="scaledSpecular"/>
        <connect from="maya16LightAccum.scaledDiffuse" to="usdPreviewSurfaceCombiner.diffuseIrradianceIn" name="diffuseIrradianceIn"/>
        <connect from="maya16LightAccum.scaledSpecular" to="usdPreviewSurfaceCombiner.specularIrradianceIn" name="specularIrradianceIn"/>
        <connect from="diffuseColorPassThrough.mayafloat3PassThrough" to="usdPreviewSurfaceCombiner.diffuseColor" name="diffuseColor"/>
        <connect from="specularColorPassThrough.mayafloat3PassThrough" to="usdPreviewSurfaceCombiner.specularColor" name="specularColor"/>
        <connect from="opacityToTransparency.transparency" to="usdPreviewSurfaceCombiner.transparency" name="transparency"/>
        <connect from="usdPreviewSurfaceCombiner.usdPreviewSurfaceCombiner" to="mayaComputeSurfaceFinal.input" name="input"/>
        <connect from="maya_FogDepthSurface.maya_FogDepthSurface" to="mayaComputeSurfaceFinal.maya_FogDepthSurface" name="maya_FogDepthSurface"/>
        <connect from="mayaComputeSurfaceFinal.mayaComputeSurfaceFinal" to="mayaSurfaceShaderOutput.mayaSurfaceShaderOutput" name="mayaSurfaceShaderOutput"/>
        <connect from="metallicPassThrough.floatPassThrough" to="usdPreviewSurfaceLightingAPI1.metallic" name="metallic"/>
        <connect from="metallicPassThrough.floatPassThrough" to="usdPreviewSurfaceCombiner.metallic" name="metallic"/>
        <connect from="iorPassThrough.floatPassThrough" to="usdPreviewSurfaceLightingAPI1.ior" name="ior"/>
        <connect from="iorPassThrough.floatPassThrough" to="usdPreviewSurfaceCombiner.ior" name="ior"/>
        <connect from="useSpecularWorkflowPassThrough.boolPassThrough" to="usdPreviewSurfaceLightingAPI1.useSpecularWorkflow" name="useSpecularWorkflow"/>
        <connect from="useSpecularWorkflowPassThrough.boolPassThrough" to="usdPreviewSurfaceCombiner.useSpecularWorkflow" name="useSpecularWorkflow"/>
    </connections>
    <properties>
        <!-- UsdPreviewSurface Parameters -->
        <float name="clearcoat" ref="usdPreviewSurfaceLightingAPI1.clearcoatAmount"/>
        <float name="clearcoatRoughness" ref="usdPreviewSurfaceLightingAPI1.clearcoatRoughness"/>
        <float3 name="diffuseColor" ref="diffuseColorPassThrough.input" flags="multiDraw"/>
        <float3 name="emissiveColor" ref="usdPreviewSurfaceCombiner.emissiveColor"/>
        <float name="ior" ref="iorPassThrough.input"/>
        <float name="metallic" ref="metallicPassThrough.input"/>
        <float name="occlusion" ref="usdPreviewSurfaceLightingAPI1.occlusion"/>
        <float name="roughness" ref="usdPreviewSurfaceLightingAPI1.specularRoughness"/>
        <float3 name="specularColor" ref="specularColorPassThrough.input"/>
        <float name="opacity" ref="opacityToTransparency.opacity"/>
        <bool name="useSpecularWorkflow" ref="useSpecularWorkflowPassThrough.input"/>

        <!-- Maya Parameters for Lighting -->
        <undefined name="GPUStage" ref="mayaComputeSurfaceFinal.GPUStage" semantic="GPUStage"/>
        <float3 name="Nw" ref="NwFaceCameraIfNAN.Nw" flags="varyingInputParam"/>
        <float3 name="Lw" ref="mayaShaderGeom.Lw"/>
        <float3 name="HLw" ref="mayaHVector.HLw"/>
        <float3 name="diffuseI" ref="usdPreviewSurfaceLightingAPI1.diffuseIrradiance"/>
        <float3 name="specularI" ref="usdPreviewSurfaceLightingAPI1.specularIrradiance"/>
        <string name="selector" ref="maya16LightAccum.selector"/>
        <bool name="mayaAlphaCut" ref="usdPreviewSurfaceCombiner.mayaAlphaCut" semantic="mayaAlphaCut" flags="isRequirementOnly"/>
        <float3 name="ambientIn" ref="usdPreviewSurfaceCombiner.ambientIn"/>
        <float3 name="IrradianceEnv" ref="usdPreviewSurfaceCombiner.IrradianceEnv"/>
        <float3 name="SpecularEnv" ref="usdPreviewSurfaceCombiner.SpecularEnv"/>
        <float name="extraOpacity" ref="mayaComputeSurfaceFinal.extraOpacity"/>
        <bool name="fogEnabled" ref="mayaComputeSurfaceFinal.fogEnabled"/>
        <float3 name="Pw" ref="maya_FogDepthSurface.Pw" semantic="Pw"/>
        <float4x4 name="ViewProj" ref="maya_FogDepthSurface.ViewProj" semantic="viewprojection"/>
        <float name="fogStart" ref="maya_FogDepthSurface.fogStart"/>
        <float name="fogEnd" ref="maya_FogDepthSurface.fogEnd"/>
        <int name="fogMode" ref="maya_FogDepthSurface.fogMode"/>
        <float name="fogDensity" ref="maya_FogDepthSurface.fogDensity"/>
        <float4 name="fogColor" ref="mayaComputeSurfaceFinal.fogColor"/>
        <float name="fogMultiplier" ref="mayaComputeSurfaceFinal.fogMultiplier"/>

        <!-- The parameter is a workaround for VP2 to execute transparency test. For more details
             see PxrMayaUsdPreviewSurfaceShadingNodeOverride::getCustomMappings(). -->
        <float name="dummyTransparency" ref="opacityToTransparency.dummyTransparency"/>
    </properties>
    <values>
        <!-- UsdPreviewSurface Parameter Default Values -->
        <float name="clearcoat" value="0.0"/>
        <float name="clearcoatRoughness" value="0.01"/>
        <float3 name="diffuseColor" value="0.18,0.18,0.18"/>
        <float3 name="emissiveColor" value="0.0,0.0,0.0"/>
        <float name="ior" value="1.5"/>
        <float name="metallic" value="0.0"/>
        <float name="occlusion" value="1.0"/>
        <float name="roughness" value="0.5"/>
        <float3 name="specularColor" value="0.0,0.0,0.0"/>
        <!-- The shader computes transparency from its "opacity" attribute. -->
        <float name="opacity" value="1.0"/>
        <bool name="useSpecularWorkflow" value="false"/>

        <!-- Default values for Maya-provided parameters. -->
        <float3 name="Lw" value="0.0,0.0,0.0"/>
        <float3 name="HLw" value="0.0,0.0,0.0"/>
        <float3 name="diffuseI" value="0.0,0.0,0.0"/>
        <float3 name="specularI" value="0.0,0.0,0.0"/>
        <string name="selector" value="mayaLightSelector16"/>
        <float3 name="ambientIn" value="0.0,0.0,0.0"/>
        <float3 name="IrradianceEnv" value="0.0,0.0,0.0"/>
        <float3 name="SpecularEnv" value="0.0,0.0,0.0"/>
        <float name="extraOpacity" value="1.0"/>
        <bool name="fogEnabled" value="false"/>
        <float name="fogStart" value="0.0"/>
        <float name="fogEnd" value="92.0"/>
        <int name="fogMode" value="0"/>
        <float name="fogDensity" value="0.1"/>
        <float4 name="fogColor" value="0.5,0.5,0.5,1.0"/>
        <float name="fogMultiplier" value="1.0"/>

        <!-- The parameter is a workaround for VP2 to execute transparency test. For more details
             see PxrMayaUsdPreviewSurfaceShadingNodeOverride::getCustomMappings(). -->
        <float name="dummyTransparency" value="0.0" />
    </values>
    <outputs>
        <struct name="mayaSurfaceShaderOutput" ref="mayaSurfaceShaderOutput.mayaSurfaceShaderOutput"/>
    </outputs>
</fragment_graph>
