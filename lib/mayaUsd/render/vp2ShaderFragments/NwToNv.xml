<!--
========================================================================
Copyright 2021 Autodesk

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
========================================================================
-->
<fragment uiName="NwToNv" name="NwToNv" type="interpolant" class="ShadeFragment" version="1.0" feature_level="0">
    <description>
        <![CDATA[Generate view space normals in the vertex shader]]>
    </description>
    <properties>
        <float4x4 name="ViewIT" semantic="ViewInverseTranspose"/>
        <float3 name="Nw" semantic="Nw" flags="varyingInputParam"/>
    </properties>
    <values>
    </values>
    <outputs>
        <float3 name="Nv" semantic="TEXTURE"/>
    </outputs>
    <implementation>
        <implementation render="OGSRenderer" language="GLSL" lang_version="3.0">
            <function_name val="NwToNv" />
            <vertex_source>
                <![CDATA[
vec3 iNwToNv(
    mat4 ViewIT,
    vec3 Nw)
{
    return (ViewIT * (vec4(Nw, 0.0))).xyz;
}
                ]]>
            </vertex_source>
            <source>
                <![CDATA[
vec3 NwToNv(
    vec3 iNv)
{
    return normalize(iNv);
}
                ]]>
            </source>
        </implementation>
        <implementation render="OGSRenderer" language="HLSL" lang_version="11.0">
            <function_name val="NwToNv" />
            <vertex_source>
                <![CDATA[
float3 iNwToNv(
    float4x4 ViewIT,
    float3 Nw)
{
    return (ViewIT * (vec4(Nw, 0.0))).xyz;
}
                ]]>
            </vertex_source>
            <source>
                <![CDATA[
float3 NwToNv(
    float3 iNv)
{
    return normalize(iNv);
}
                ]]>
            </source>
        </implementation>
        <implementation render="OGSRenderer" language="Cg" lang_version="2.1">
            <function_name val="NwToNv" />
            <vertex_source>
                <![CDATA[
float3 iNwToNv(
    float4x4 ViewIT,
    float3 Nw)
{
    return (ViewIT * (vec4(Nw, 0.0))).xyz;
}
                ]]>
            </vertex_source>
            <source>
                <![CDATA[
float3 NwToNv(
    float3 iNv)
{
    return normalize(iNv);
}
                ]]>
            </source>
        </implementation>
    </implementation>
</fragment>
